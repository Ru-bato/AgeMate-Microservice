declare const _default: {
    configs: {
        'flat/pedantic': {
            name: string;
            rules: {
                readonly 'array-callback-return': "off";
                readonly eqeqeq: "off";
                readonly 'max-classes-per-file': "off";
                readonly 'max-lines': "off";
                readonly 'no-array-constructor': "off";
                readonly '@typescript-eslint/no-array-constructor': "off";
                readonly 'no-case-declarations': "off";
                readonly 'no-constructor-return': "off";
                readonly 'no-else-return': "off";
                readonly 'no-fallthrough': "off";
                readonly 'no-inner-declarations': "off";
                readonly 'no-new-wrappers': "off";
                readonly 'no-prototype-builtins': "off";
                readonly 'no-redeclare': "off";
                readonly '@typescript-eslint/no-redeclare': "off";
                readonly 'no-self-compare': "off";
                readonly 'no-throw-literal': "off";
                readonly radix: "off";
                readonly 'require-await': "off";
                readonly 'sort-vars': "off";
                readonly 'symbol-description': "off";
                readonly 'import/max-dependencies': "off";
                readonly 'jest/no-conditional-in-test': "off";
                readonly 'jsdoc/require-param': "off";
                readonly 'jsdoc/require-param-description': "off";
                readonly 'jsdoc/require-param-name': "off";
                readonly 'jsdoc/require-param-type': "off";
                readonly 'jsdoc/require-returns': "off";
                readonly 'jsdoc/require-returns-description': "off";
                readonly 'jsdoc/require-returns-type': "off";
                readonly 'react/checked-requires-onchange-or-readonly': "off";
                readonly 'react/jsx-no-useless-fragment': "off";
                readonly 'react/no-unescaped-entities': "off";
                readonly '@typescript-eslint/ban-ts-comment': "off";
                readonly '@typescript-eslint/ban-types': "off";
                readonly '@typescript-eslint/no-unsafe-function-type': "off";
                readonly '@typescript-eslint/prefer-enum-initializers': "off";
                readonly '@typescript-eslint/prefer-ts-expect-error': "off";
                readonly 'unicorn/consistent-empty-array-spread': "off";
                readonly 'unicorn/escape-case': "off";
                readonly 'unicorn/explicit-length-check': "off";
                readonly 'unicorn/new-for-builtins': "off";
                readonly 'unicorn/no-hex-escape': "off";
                readonly 'unicorn/no-instanceof-array': "off";
                readonly 'unicorn/no-lonely-if': "off";
                readonly 'unicorn/no-negated-condition': "off";
                readonly 'unicorn/no-negation-in-equality-check': "off";
                readonly 'unicorn/no-new-buffer': "off";
                readonly 'unicorn/no-object-as-default-parameter': "off";
                readonly 'unicorn/no-static-only-class': "off";
                readonly 'unicorn/no-this-assignment': "off";
                readonly 'unicorn/no-typeof-undefined': "off";
                readonly 'unicorn/no-unreadable-iife': "off";
                readonly 'unicorn/no-useless-promise-resolve-reject': "off";
                readonly 'unicorn/no-useless-switch-case': "off";
                readonly 'unicorn/no-useless-undefined': "off";
                readonly 'unicorn/prefer-array-flat': "off";
                readonly 'unicorn/prefer-array-some': "off";
                readonly 'unicorn/prefer-blob-reading-methods': "off";
                readonly 'unicorn/prefer-code-point': "off";
                readonly 'unicorn/prefer-date-now': "off";
                readonly 'unicorn/prefer-dom-node-append': "off";
                readonly 'unicorn/prefer-dom-node-dataset': "off";
                readonly 'unicorn/prefer-dom-node-remove': "off";
                readonly 'unicorn/prefer-event-target': "off";
                readonly 'unicorn/prefer-math-min-max': "off";
                readonly 'unicorn/prefer-math-trunc': "off";
                readonly 'unicorn/prefer-native-coercion-functions': "off";
                readonly 'unicorn/prefer-prototype-methods': "off";
                readonly 'unicorn/prefer-query-selector': "off";
                readonly 'unicorn/prefer-regexp-test': "off";
                readonly 'unicorn/prefer-string-replace-all': "off";
                readonly 'unicorn/prefer-string-slice': "off";
                readonly 'unicorn/prefer-type-error': "off";
                readonly 'unicorn/require-number-to-fixed-digits-argument': "off";
            };
        };
        'flat/nursery': {
            name: string;
            rules: {
                readonly 'constructor-super': "off";
                readonly 'getter-return': "off";
                readonly 'no-undef': "off";
                readonly 'no-unreachable': "off";
                readonly 'import/export': "off";
                readonly 'import/no-deprecated': "off";
                readonly 'import/no-unused-modules': "off";
                readonly 'promise/no-return-in-finally': "off";
                readonly 'react/require-render-return': "off";
                readonly 'react-hooks/rules-of-hooks': "off";
                readonly 'tree-shaking/no-side-effects-in-initialization': "off";
                readonly '@typescript-eslint/consistent-type-imports': "off";
            };
        };
        'flat/restriction': {
            name: string;
            rules: {
                readonly 'default-case': "off";
                readonly 'no-alert': "off";
                readonly 'no-bitwise': "off";
                readonly 'no-console': "off";
                readonly 'no-div-regex': "off";
                readonly 'no-empty': "off";
                readonly 'no-empty-function': "off";
                readonly '@typescript-eslint/no-empty-function': "off";
                readonly 'no-eq-null': "off";
                readonly 'no-eval': "off";
                readonly 'no-iterator': "off";
                readonly 'no-plusplus': "off";
                readonly 'no-proto': "off";
                readonly 'no-regex-spaces': "off";
                readonly 'no-restricted-globals': "off";
                readonly 'no-undefined': "off";
                readonly 'no-var': "off";
                readonly 'no-void': "off";
                readonly 'unicode-bom': "off";
                readonly 'import/no-amd': "off";
                readonly 'import/no-commonjs': "off";
                readonly 'import/no-cycle': "off";
                readonly 'import/no-default-export': "off";
                readonly 'import/no-dynamic-require': "off";
                readonly 'import/no-webpack-loader-syntax': "off";
                readonly 'import/unambiguous': "off";
                readonly 'jsdoc/check-access': "off";
                readonly 'jsdoc/empty-tags': "off";
                readonly 'node/no-new-require': "off";
                readonly 'promise/catch-or-return': "off";
                readonly 'promise/spec-only': "off";
                readonly 'react/button-has-type': "off";
                readonly 'react/no-danger': "off";
                readonly 'react/no-unknown-property': "off";
                readonly '@typescript-eslint/explicit-function-return-type': "off";
                readonly '@typescript-eslint/no-dynamic-delete': "off";
                readonly '@typescript-eslint/no-explicit-any': "off";
                readonly '@typescript-eslint/no-import-type-side-effects': "off";
                readonly '@typescript-eslint/no-namespace': "off";
                readonly '@typescript-eslint/no-non-null-asserted-nullish-coalescing': "off";
                readonly '@typescript-eslint/no-non-null-assertion': "off";
                readonly '@typescript-eslint/no-var-requires': "off";
                readonly '@typescript-eslint/prefer-literal-enum-member': "off";
                readonly 'unicorn/no-abusive-eslint-disable': "off";
                readonly 'unicorn/no-anonymous-default-export': "off";
                readonly 'unicorn/no-array-for-each': "off";
                readonly 'unicorn/no-array-reduce': "off";
                readonly 'unicorn/no-length-as-slice-end': "off";
                readonly 'unicorn/no-magic-array-flat-depth': "off";
                readonly 'unicorn/no-nested-ternary': "off";
                readonly 'unicorn/no-process-exit': "off";
                readonly 'unicorn/prefer-modern-math-apis': "off";
                readonly 'unicorn/prefer-node-protocol': "off";
                readonly 'unicorn/prefer-number-properties': "off";
            };
        };
        'flat/style': {
            name: string;
            rules: {
                readonly 'default-case-last': "off";
                readonly 'default-param-last': "off";
                readonly '@typescript-eslint/default-param-last': "off";
                readonly 'func-names': "off";
                readonly 'guard-for-in': "off";
                readonly 'max-params': "off";
                readonly '@typescript-eslint/max-params': "off";
                readonly 'no-continue': "off";
                readonly 'no-label-var': "off";
                readonly 'no-magic-numbers': "off";
                readonly '@typescript-eslint/no-magic-numbers': "off";
                readonly 'no-multi-str': "off";
                readonly 'no-new-func': "off";
                readonly 'no-return-assign': "off";
                readonly 'no-script-url': "off";
                readonly 'no-template-curly-in-string': "off";
                readonly 'no-ternary': "off";
                readonly 'prefer-exponentiation-operator': "off";
                readonly 'prefer-numeric-literals': "off";
                readonly 'prefer-object-has-own': "off";
                readonly 'sort-imports': "off";
                readonly 'sort-keys': "off";
                readonly 'import/first': "off";
                readonly 'jest/consistent-test-it': "off";
                readonly 'jest/max-expects': "off";
                readonly 'jest/max-nested-describe': "off";
                readonly 'jest/no-alias-methods': "off";
                readonly 'jest/no-confusing-set-timeout': "off";
                readonly 'jest/no-deprecated-functions': "off";
                readonly 'jest/no-done-callback': "off";
                readonly 'jest/no-duplicate-hooks': "off";
                readonly 'jest/no-hooks': "off";
                readonly 'jest/no-identical-title': "off";
                readonly 'jest/no-interpolation-in-snapshots': "off";
                readonly 'jest/no-jasmine-globals': "off";
                readonly 'jest/no-large-snapshots': "off";
                readonly 'jest/no-mocks-import': "off";
                readonly 'jest/no-restricted-jest-methods': "off";
                readonly 'jest/no-restricted-matchers': "off";
                readonly 'jest/no-test-prefixes': "off";
                readonly 'jest/no-test-return-statement': "off";
                readonly 'jest/no-untyped-mock-factory': "off";
                readonly 'jest/prefer-called-with': "off";
                readonly 'jest/prefer-comparison-matcher': "off";
                readonly 'jest/prefer-equality-matcher': "off";
                readonly 'jest/prefer-expect-resolves': "off";
                readonly 'jest/prefer-hooks-in-order': "off";
                readonly 'jest/prefer-hooks-on-top': "off";
                readonly 'jest/prefer-jest-mocked': "off";
                readonly 'jest/prefer-lowercase-title': "off";
                readonly 'jest/prefer-mock-promise-shorthand': "off";
                readonly 'jest/prefer-spy-on': "off";
                readonly 'jest/prefer-strict-equal': "off";
                readonly 'jest/prefer-to-be': "off";
                readonly 'jest/prefer-to-contain': "off";
                readonly 'jest/prefer-to-have-length': "off";
                readonly 'jest/prefer-todo': "off";
                readonly 'jest/require-hook': "off";
                readonly 'jest/require-top-level-describe': "off";
                readonly 'node/no-exports-assign': "off";
                readonly 'promise/avoid-new': "off";
                readonly 'promise/param-names': "off";
                readonly 'promise/prefer-await-to-callbacks': "off";
                readonly 'promise/prefer-await-to-then': "off";
                readonly 'react/jsx-boolean-value': "off";
                readonly 'react/jsx-curly-brace-presence': "off";
                readonly 'react/no-set-state': "off";
                readonly 'react/prefer-es6-class': "off";
                readonly 'react/self-closing-comp': "off";
                readonly '@typescript-eslint/adjacent-overload-signatures': "off";
                readonly '@typescript-eslint/array-type': "off";
                readonly '@typescript-eslint/ban-tslint-comment': "off";
                readonly '@typescript-eslint/consistent-indexed-object-style': "off";
                readonly '@typescript-eslint/consistent-type-definitions': "off";
                readonly '@typescript-eslint/no-empty-interface': "off";
                readonly '@typescript-eslint/prefer-for-of': "off";
                readonly '@typescript-eslint/prefer-function-type': "off";
                readonly '@typescript-eslint/prefer-namespace-keyword': "off";
                readonly 'unicorn/catch-error-name': "off";
                readonly 'unicorn/empty-brace-spaces': "off";
                readonly 'unicorn/error-message': "off";
                readonly 'unicorn/filename-case': "off";
                readonly 'unicorn/no-await-expression-member': "off";
                readonly 'unicorn/no-console-spaces': "off";
                readonly 'unicorn/no-null': "off";
                readonly 'unicorn/no-unreadable-array-destructuring': "off";
                readonly 'unicorn/no-zero-fractions': "off";
                readonly 'unicorn/number-literal-case': "off";
                readonly 'unicorn/numeric-separators-style': "off";
                readonly 'unicorn/prefer-array-flat-map': "off";
                readonly 'unicorn/prefer-dom-node-text-content': "off";
                readonly 'unicorn/prefer-includes': "off";
                readonly 'unicorn/prefer-logical-operator-over-ternary': "off";
                readonly 'unicorn/prefer-modern-dom-apis': "off";
                readonly 'unicorn/prefer-optional-catch-binding': "off";
                readonly 'unicorn/prefer-reflect-apply': "off";
                readonly 'unicorn/prefer-spread': "off";
                readonly 'unicorn/prefer-string-trim-start-end': "off";
                readonly 'unicorn/prefer-structured-clone': "off";
                readonly 'unicorn/require-array-join-separator': "off";
                readonly 'unicorn/switch-case-braces': "off";
                readonly 'unicorn/text-encoding-identifier-case': "off";
                readonly 'unicorn/throw-new-error': "off";
                readonly 'vitest/no-import-node-test': "off";
                readonly 'vitest/prefer-each': "off";
                readonly 'vitest/prefer-to-be-falsy': "off";
                readonly 'vitest/prefer-to-be-object': "off";
                readonly 'vitest/prefer-to-be-truthy': "off";
            };
        };
        'flat/correctness': {
            name: string;
            rules: {
                readonly 'for-direction': "off";
                readonly 'no-async-promise-executor': "off";
                readonly 'no-caller': "off";
                readonly 'no-class-assign': "off";
                readonly 'no-compare-neg-zero': "off";
                readonly 'no-cond-assign': "off";
                readonly 'no-const-assign': "off";
                readonly 'no-constant-binary-expression': "off";
                readonly 'no-constant-condition': "off";
                readonly 'no-control-regex': "off";
                readonly 'no-debugger': "off";
                readonly 'no-delete-var': "off";
                readonly 'no-dupe-class-members': "off";
                readonly '@typescript-eslint/no-dupe-class-members': "off";
                readonly 'no-dupe-else-if': "off";
                readonly 'no-dupe-keys': "off";
                readonly 'no-duplicate-case': "off";
                readonly 'no-empty-character-class': "off";
                readonly 'no-empty-pattern': "off";
                readonly 'no-empty-static-block': "off";
                readonly 'no-ex-assign': "off";
                readonly 'no-extra-boolean-cast': "off";
                readonly 'no-func-assign': "off";
                readonly 'no-global-assign': "off";
                readonly 'no-import-assign': "off";
                readonly 'no-invalid-regexp': "off";
                readonly 'no-irregular-whitespace': "off";
                readonly 'no-loss-of-precision': "off";
                readonly '@typescript-eslint/no-loss-of-precision': "off";
                readonly 'no-new-native-nonconstructor': "off";
                readonly 'no-nonoctal-decimal-escape': "off";
                readonly 'no-obj-calls': "off";
                readonly 'no-self-assign': "off";
                readonly 'no-setter-return': "off";
                readonly 'no-shadow-restricted-names': "off";
                readonly 'no-sparse-arrays': "off";
                readonly 'no-this-before-super': "off";
                readonly 'no-unsafe-finally': "off";
                readonly 'no-unsafe-negation': "off";
                readonly 'no-unsafe-optional-chaining': "off";
                readonly 'no-unused-labels': "off";
                readonly 'no-unused-private-class-members': "off";
                readonly 'no-unused-vars': "off";
                readonly '@typescript-eslint/no-unused-vars': "off";
                readonly 'no-useless-catch': "off";
                readonly 'no-useless-escape': "off";
                readonly 'no-useless-rename': "off";
                readonly 'no-with': "off";
                readonly 'require-yield': "off";
                readonly 'use-isnan': "off";
                readonly 'valid-typeof': "off";
                readonly 'import/default': "off";
                readonly 'import/named': "off";
                readonly 'import/namespace': "off";
                readonly 'jest/expect-expect': "off";
                readonly 'jest/no-conditional-expect': "off";
                readonly 'jest/no-disabled-tests': "off";
                readonly 'jest/no-export': "off";
                readonly 'jest/no-focused-tests': "off";
                readonly 'jest/no-standalone-expect': "off";
                readonly 'jest/require-to-throw-message': "off";
                readonly 'jest/valid-describe-callback': "off";
                readonly 'jest/valid-expect': "off";
                readonly 'jest/valid-title': "off";
                readonly 'jsdoc/check-property-names': "off";
                readonly 'jsdoc/check-tag-names': "off";
                readonly 'jsdoc/implements-on-classes': "off";
                readonly 'jsdoc/no-defaults': "off";
                readonly 'jsdoc/require-property': "off";
                readonly 'jsdoc/require-property-description': "off";
                readonly 'jsdoc/require-property-name': "off";
                readonly 'jsdoc/require-property-type': "off";
                readonly 'jsdoc/require-yields': "off";
                readonly 'jsx-a11y/alt-text': "off";
                readonly 'jsx-a11y/anchor-has-content': "off";
                readonly 'jsx-a11y/anchor-is-valid': "off";
                readonly 'jsx-a11y/aria-activedescendant-has-tabindex': "off";
                readonly 'jsx-a11y/aria-props': "off";
                readonly 'jsx-a11y/aria-role': "off";
                readonly 'jsx-a11y/aria-unsupported-elements': "off";
                readonly 'jsx-a11y/autocomplete-valid': "off";
                readonly 'jsx-a11y/click-events-have-key-events': "off";
                readonly 'jsx-a11y/heading-has-content': "off";
                readonly 'jsx-a11y/html-has-lang': "off";
                readonly 'jsx-a11y/iframe-has-title': "off";
                readonly 'jsx-a11y/img-redundant-alt': "off";
                readonly 'jsx-a11y/label-has-associated-control': "off";
                readonly 'jsx-a11y/lang': "off";
                readonly 'jsx-a11y/media-has-caption': "off";
                readonly 'jsx-a11y/mouse-events-have-key-events': "off";
                readonly 'jsx-a11y/no-access-key': "off";
                readonly 'jsx-a11y/no-aria-hidden-on-focusable': "off";
                readonly 'jsx-a11y/no-autofocus': "off";
                readonly 'jsx-a11y/no-distracting-elements': "off";
                readonly 'jsx-a11y/no-redundant-roles': "off";
                readonly 'jsx-a11y/prefer-tag-over-role': "off";
                readonly 'jsx-a11y/role-has-required-aria-props': "off";
                readonly 'jsx-a11y/role-supports-aria-props': "off";
                readonly 'jsx-a11y/scope': "off";
                readonly 'jsx-a11y/tabindex-no-positive': "off";
                readonly '@next/next/google-font-display': "off";
                readonly '@next/next/google-font-preconnect': "off";
                readonly '@next/next/inline-script-id': "off";
                readonly '@next/next/next-script-for-ga': "off";
                readonly '@next/next/no-assign-module-variable': "off";
                readonly '@next/next/no-async-client-component': "off";
                readonly '@next/next/no-before-interactive-script-outside-document': "off";
                readonly '@next/next/no-css-tags': "off";
                readonly '@next/next/no-document-import-in-page': "off";
                readonly '@next/next/no-duplicate-head': "off";
                readonly '@next/next/no-head-element': "off";
                readonly '@next/next/no-head-import-in-document': "off";
                readonly '@next/next/no-img-element': "off";
                readonly '@next/next/no-page-custom-font': "off";
                readonly '@next/next/no-script-component-in-head': "off";
                readonly '@next/next/no-styled-jsx-in-document': "off";
                readonly '@next/next/no-sync-scripts': "off";
                readonly '@next/next/no-title-in-document-head': "off";
                readonly '@next/next/no-typos': "off";
                readonly '@next/next/no-unwanted-polyfillio': "off";
                readonly 'promise/no-callback-in-promise': "off";
                readonly 'promise/no-new-statics': "off";
                readonly 'promise/valid-params': "off";
                readonly 'react/jsx-key': "off";
                readonly 'react/jsx-no-duplicate-props': "off";
                readonly 'react/jsx-no-target-blank': "off";
                readonly 'react/jsx-no-undef': "off";
                readonly 'react/jsx-props-no-spread-multi': "off";
                readonly 'react/no-children-prop': "off";
                readonly 'react/no-danger-with-children': "off";
                readonly 'react/no-direct-mutation-state': "off";
                readonly 'react/no-find-dom-node': "off";
                readonly 'react/no-is-mounted': "off";
                readonly 'react/no-render-return-value': "off";
                readonly 'react/no-string-refs': "off";
                readonly 'react/void-dom-elements-no-children': "off";
                readonly '@typescript-eslint/no-duplicate-enum-values': "off";
                readonly '@typescript-eslint/no-extra-non-null-assertion': "off";
                readonly '@typescript-eslint/no-misused-new': "off";
                readonly '@typescript-eslint/no-non-null-asserted-optional-chain': "off";
                readonly '@typescript-eslint/no-this-alias': "off";
                readonly '@typescript-eslint/no-unsafe-declaration-merging': "off";
                readonly '@typescript-eslint/no-useless-empty-export': "off";
                readonly '@typescript-eslint/no-wrapper-object-types': "off";
                readonly '@typescript-eslint/prefer-as-const': "off";
                readonly '@typescript-eslint/triple-slash-reference': "off";
                readonly 'unicorn/no-await-in-promise-methods': "off";
                readonly 'unicorn/no-document-cookie': "off";
                readonly 'unicorn/no-empty-file': "off";
                readonly 'unicorn/no-invalid-remove-event-listener': "off";
                readonly 'unicorn/no-new-array': "off";
                readonly 'unicorn/no-single-promise-in-promise-methods': "off";
                readonly 'unicorn/no-thenable': "off";
                readonly 'unicorn/no-unnecessary-await': "off";
                readonly 'unicorn/no-useless-fallback-in-spread': "off";
                readonly 'unicorn/no-useless-length-check': "off";
                readonly 'unicorn/no-useless-spread': "off";
                readonly 'unicorn/prefer-set-size': "off";
                readonly 'unicorn/prefer-string-starts-ends-with': "off";
                readonly 'vitest/no-conditional-tests': "off";
                readonly 'vitest/require-local-test-context-for-concurrent-snapshots': "off";
            };
        };
        'flat/perf': {
            name: string;
            rules: {
                readonly 'no-await-in-loop': "off";
                readonly 'react-perf/jsx-no-jsx-as-prop': "off";
                readonly 'react-perf/jsx-no-new-array-as-prop': "off";
                readonly 'react-perf/jsx-no-new-function-as-prop': "off";
                readonly 'react-perf/jsx-no-new-object-as-prop': "off";
            };
        };
        'flat/suspicious': {
            name: string;
            rules: {
                readonly 'no-extend-native': "off";
                readonly 'no-new': "off";
                readonly 'no-unexpected-multiline': "off";
                readonly 'no-useless-concat': "off";
                readonly 'no-useless-constructor': "off";
                readonly '@typescript-eslint/no-useless-constructor': "off";
                readonly 'import/no-duplicates': "off";
                readonly 'import/no-named-as-default': "off";
                readonly 'import/no-named-as-default-member': "off";
                readonly 'import/no-self-import': "off";
                readonly 'jest/no-commented-out-tests': "off";
                readonly 'react/iframe-missing-sandbox': "off";
                readonly 'react/jsx-no-comment-textnodes': "off";
                readonly 'react/react-in-jsx-scope': "off";
                readonly 'react/style-prop-object': "off";
                readonly '@typescript-eslint/no-confusing-non-null-assertion': "off";
                readonly '@typescript-eslint/no-extraneous-class': "off";
                readonly '@typescript-eslint/no-unnecessary-type-constraint': "off";
                readonly 'unicorn/consistent-function-scoping': "off";
                readonly 'unicorn/prefer-add-event-listener': "off";
            };
        };
        'flat/eslint': {
            name: string;
            rules: {
                readonly 'array-callback-return': "off";
                readonly 'constructor-super': "off";
                readonly 'default-case': "off";
                readonly 'default-case-last': "off";
                readonly 'default-param-last': "off";
                readonly eqeqeq: "off";
                readonly 'for-direction': "off";
                readonly 'func-names': "off";
                readonly 'getter-return': "off";
                readonly 'guard-for-in': "off";
                readonly 'max-classes-per-file': "off";
                readonly 'max-lines': "off";
                readonly 'max-params': "off";
                readonly 'no-alert': "off";
                readonly 'no-array-constructor': "off";
                readonly 'no-async-promise-executor': "off";
                readonly 'no-await-in-loop': "off";
                readonly 'no-bitwise': "off";
                readonly 'no-caller': "off";
                readonly 'no-case-declarations': "off";
                readonly 'no-class-assign': "off";
                readonly 'no-compare-neg-zero': "off";
                readonly 'no-cond-assign': "off";
                readonly 'no-console': "off";
                readonly 'no-const-assign': "off";
                readonly 'no-constant-binary-expression': "off";
                readonly 'no-constant-condition': "off";
                readonly 'no-constructor-return': "off";
                readonly 'no-continue': "off";
                readonly 'no-control-regex': "off";
                readonly 'no-debugger': "off";
                readonly 'no-delete-var': "off";
                readonly 'no-div-regex': "off";
                readonly 'no-dupe-class-members': "off";
                readonly 'no-dupe-else-if': "off";
                readonly 'no-dupe-keys': "off";
                readonly 'no-duplicate-case': "off";
                readonly 'no-else-return': "off";
                readonly 'no-empty': "off";
                readonly 'no-empty-character-class': "off";
                readonly 'no-empty-function': "off";
                readonly 'no-empty-pattern': "off";
                readonly 'no-empty-static-block': "off";
                readonly 'no-eq-null': "off";
                readonly 'no-eval': "off";
                readonly 'no-ex-assign': "off";
                readonly 'no-extend-native': "off";
                readonly 'no-extra-boolean-cast': "off";
                readonly 'no-fallthrough': "off";
                readonly 'no-func-assign': "off";
                readonly 'no-global-assign': "off";
                readonly 'no-import-assign': "off";
                readonly 'no-inner-declarations': "off";
                readonly 'no-invalid-regexp': "off";
                readonly 'no-irregular-whitespace': "off";
                readonly 'no-iterator': "off";
                readonly 'no-label-var': "off";
                readonly 'no-loss-of-precision': "off";
                readonly 'no-magic-numbers': "off";
                readonly 'no-multi-str': "off";
                readonly 'no-new': "off";
                readonly 'no-new-func': "off";
                readonly 'no-new-native-nonconstructor': "off";
                readonly 'no-new-wrappers': "off";
                readonly 'no-nonoctal-decimal-escape': "off";
                readonly 'no-obj-calls': "off";
                readonly 'no-plusplus': "off";
                readonly 'no-proto': "off";
                readonly 'no-prototype-builtins': "off";
                readonly 'no-redeclare': "off";
                readonly 'no-regex-spaces': "off";
                readonly 'no-restricted-globals': "off";
                readonly 'no-return-assign': "off";
                readonly 'no-script-url': "off";
                readonly 'no-self-assign': "off";
                readonly 'no-self-compare': "off";
                readonly 'no-setter-return': "off";
                readonly 'no-shadow-restricted-names': "off";
                readonly 'no-sparse-arrays': "off";
                readonly 'no-template-curly-in-string': "off";
                readonly 'no-ternary': "off";
                readonly 'no-this-before-super': "off";
                readonly 'no-throw-literal': "off";
                readonly 'no-undef': "off";
                readonly 'no-undefined': "off";
                readonly 'no-unexpected-multiline': "off";
                readonly 'no-unreachable': "off";
                readonly 'no-unsafe-finally': "off";
                readonly 'no-unsafe-negation': "off";
                readonly 'no-unsafe-optional-chaining': "off";
                readonly 'no-unused-labels': "off";
                readonly 'no-unused-private-class-members': "off";
                readonly 'no-unused-vars': "off";
                readonly 'no-useless-catch': "off";
                readonly 'no-useless-concat': "off";
                readonly 'no-useless-constructor': "off";
                readonly 'no-useless-escape': "off";
                readonly 'no-useless-rename': "off";
                readonly 'no-var': "off";
                readonly 'no-void': "off";
                readonly 'no-with': "off";
                readonly 'prefer-exponentiation-operator': "off";
                readonly 'prefer-numeric-literals': "off";
                readonly 'prefer-object-has-own': "off";
                readonly radix: "off";
                readonly 'require-await': "off";
                readonly 'require-yield': "off";
                readonly 'sort-imports': "off";
                readonly 'sort-keys': "off";
                readonly 'sort-vars': "off";
                readonly 'symbol-description': "off";
                readonly 'unicode-bom': "off";
                readonly 'use-isnan': "off";
                readonly 'valid-typeof': "off";
            };
        };
        'flat/typescript': {
            name: string;
            rules: {
                readonly '@typescript-eslint/default-param-last': "off";
                readonly '@typescript-eslint/max-params': "off";
                readonly '@typescript-eslint/no-array-constructor': "off";
                readonly '@typescript-eslint/no-dupe-class-members': "off";
                readonly '@typescript-eslint/no-empty-function': "off";
                readonly '@typescript-eslint/no-loss-of-precision': "off";
                readonly '@typescript-eslint/no-magic-numbers': "off";
                readonly '@typescript-eslint/no-redeclare': "off";
                readonly '@typescript-eslint/no-unused-vars': "off";
                readonly '@typescript-eslint/no-useless-constructor': "off";
                readonly '@typescript-eslint/adjacent-overload-signatures': "off";
                readonly '@typescript-eslint/array-type': "off";
                readonly '@typescript-eslint/ban-ts-comment': "off";
                readonly '@typescript-eslint/ban-tslint-comment': "off";
                readonly '@typescript-eslint/ban-types': "off";
                readonly '@typescript-eslint/consistent-indexed-object-style': "off";
                readonly '@typescript-eslint/consistent-type-definitions': "off";
                readonly '@typescript-eslint/consistent-type-imports': "off";
                readonly '@typescript-eslint/explicit-function-return-type': "off";
                readonly '@typescript-eslint/no-confusing-non-null-assertion': "off";
                readonly '@typescript-eslint/no-duplicate-enum-values': "off";
                readonly '@typescript-eslint/no-dynamic-delete': "off";
                readonly '@typescript-eslint/no-empty-interface': "off";
                readonly '@typescript-eslint/no-explicit-any': "off";
                readonly '@typescript-eslint/no-extra-non-null-assertion': "off";
                readonly '@typescript-eslint/no-extraneous-class': "off";
                readonly '@typescript-eslint/no-import-type-side-effects': "off";
                readonly '@typescript-eslint/no-misused-new': "off";
                readonly '@typescript-eslint/no-namespace': "off";
                readonly '@typescript-eslint/no-non-null-asserted-nullish-coalescing': "off";
                readonly '@typescript-eslint/no-non-null-asserted-optional-chain': "off";
                readonly '@typescript-eslint/no-non-null-assertion': "off";
                readonly '@typescript-eslint/no-this-alias': "off";
                readonly '@typescript-eslint/no-unnecessary-type-constraint': "off";
                readonly '@typescript-eslint/no-unsafe-declaration-merging': "off";
                readonly '@typescript-eslint/no-unsafe-function-type': "off";
                readonly '@typescript-eslint/no-useless-empty-export': "off";
                readonly '@typescript-eslint/no-var-requires': "off";
                readonly '@typescript-eslint/no-wrapper-object-types': "off";
                readonly '@typescript-eslint/prefer-as-const': "off";
                readonly '@typescript-eslint/prefer-enum-initializers': "off";
                readonly '@typescript-eslint/prefer-for-of': "off";
                readonly '@typescript-eslint/prefer-function-type': "off";
                readonly '@typescript-eslint/prefer-literal-enum-member': "off";
                readonly '@typescript-eslint/prefer-namespace-keyword': "off";
                readonly '@typescript-eslint/prefer-ts-expect-error': "off";
                readonly '@typescript-eslint/triple-slash-reference': "off";
            };
        };
        'flat/import': {
            name: string;
            rules: {
                readonly 'import/default': "off";
                readonly 'import/export': "off";
                readonly 'import/first': "off";
                readonly 'import/max-dependencies': "off";
                readonly 'import/named': "off";
                readonly 'import/namespace': "off";
                readonly 'import/no-amd': "off";
                readonly 'import/no-commonjs': "off";
                readonly 'import/no-cycle': "off";
                readonly 'import/no-default-export': "off";
                readonly 'import/no-deprecated': "off";
                readonly 'import/no-duplicates': "off";
                readonly 'import/no-dynamic-require': "off";
                readonly 'import/no-named-as-default': "off";
                readonly 'import/no-named-as-default-member': "off";
                readonly 'import/no-self-import': "off";
                readonly 'import/no-unused-modules': "off";
                readonly 'import/no-webpack-loader-syntax': "off";
                readonly 'import/unambiguous': "off";
            };
        };
        'flat/jest': {
            name: string;
            rules: {
                readonly 'jest/consistent-test-it': "off";
                readonly 'jest/expect-expect': "off";
                readonly 'jest/max-expects': "off";
                readonly 'jest/max-nested-describe': "off";
                readonly 'jest/no-alias-methods': "off";
                readonly 'jest/no-commented-out-tests': "off";
                readonly 'jest/no-conditional-expect': "off";
                readonly 'jest/no-conditional-in-test': "off";
                readonly 'jest/no-confusing-set-timeout': "off";
                readonly 'jest/no-deprecated-functions': "off";
                readonly 'jest/no-disabled-tests': "off";
                readonly 'jest/no-done-callback': "off";
                readonly 'jest/no-duplicate-hooks': "off";
                readonly 'jest/no-export': "off";
                readonly 'jest/no-focused-tests': "off";
                readonly 'jest/no-hooks': "off";
                readonly 'jest/no-identical-title': "off";
                readonly 'jest/no-interpolation-in-snapshots': "off";
                readonly 'jest/no-jasmine-globals': "off";
                readonly 'jest/no-large-snapshots': "off";
                readonly 'jest/no-mocks-import': "off";
                readonly 'jest/no-restricted-jest-methods': "off";
                readonly 'jest/no-restricted-matchers': "off";
                readonly 'jest/no-standalone-expect': "off";
                readonly 'jest/no-test-prefixes': "off";
                readonly 'jest/no-test-return-statement': "off";
                readonly 'jest/no-untyped-mock-factory': "off";
                readonly 'jest/prefer-called-with': "off";
                readonly 'jest/prefer-comparison-matcher': "off";
                readonly 'jest/prefer-equality-matcher': "off";
                readonly 'jest/prefer-expect-resolves': "off";
                readonly 'jest/prefer-hooks-in-order': "off";
                readonly 'jest/prefer-hooks-on-top': "off";
                readonly 'jest/prefer-jest-mocked': "off";
                readonly 'jest/prefer-lowercase-title': "off";
                readonly 'jest/prefer-mock-promise-shorthand': "off";
                readonly 'jest/prefer-spy-on': "off";
                readonly 'jest/prefer-strict-equal': "off";
                readonly 'jest/prefer-to-be': "off";
                readonly 'jest/prefer-to-contain': "off";
                readonly 'jest/prefer-to-have-length': "off";
                readonly 'jest/prefer-todo': "off";
                readonly 'jest/require-hook': "off";
                readonly 'jest/require-to-throw-message': "off";
                readonly 'jest/require-top-level-describe': "off";
                readonly 'jest/valid-describe-callback': "off";
                readonly 'jest/valid-expect': "off";
                readonly 'jest/valid-title': "off";
            };
        };
        'flat/jsdoc': {
            name: string;
            rules: {
                readonly 'jsdoc/check-access': "off";
                readonly 'jsdoc/check-property-names': "off";
                readonly 'jsdoc/check-tag-names': "off";
                readonly 'jsdoc/empty-tags': "off";
                readonly 'jsdoc/implements-on-classes': "off";
                readonly 'jsdoc/no-defaults': "off";
                readonly 'jsdoc/require-param': "off";
                readonly 'jsdoc/require-param-description': "off";
                readonly 'jsdoc/require-param-name': "off";
                readonly 'jsdoc/require-param-type': "off";
                readonly 'jsdoc/require-property': "off";
                readonly 'jsdoc/require-property-description': "off";
                readonly 'jsdoc/require-property-name': "off";
                readonly 'jsdoc/require-property-type': "off";
                readonly 'jsdoc/require-returns': "off";
                readonly 'jsdoc/require-returns-description': "off";
                readonly 'jsdoc/require-returns-type': "off";
                readonly 'jsdoc/require-yields': "off";
            };
        };
        'flat/jsx-a11y': {
            name: string;
            rules: {
                readonly 'jsx-a11y/alt-text': "off";
                readonly 'jsx-a11y/anchor-has-content': "off";
                readonly 'jsx-a11y/anchor-is-valid': "off";
                readonly 'jsx-a11y/aria-activedescendant-has-tabindex': "off";
                readonly 'jsx-a11y/aria-props': "off";
                readonly 'jsx-a11y/aria-role': "off";
                readonly 'jsx-a11y/aria-unsupported-elements': "off";
                readonly 'jsx-a11y/autocomplete-valid': "off";
                readonly 'jsx-a11y/click-events-have-key-events': "off";
                readonly 'jsx-a11y/heading-has-content': "off";
                readonly 'jsx-a11y/html-has-lang': "off";
                readonly 'jsx-a11y/iframe-has-title': "off";
                readonly 'jsx-a11y/img-redundant-alt': "off";
                readonly 'jsx-a11y/label-has-associated-control': "off";
                readonly 'jsx-a11y/lang': "off";
                readonly 'jsx-a11y/media-has-caption': "off";
                readonly 'jsx-a11y/mouse-events-have-key-events': "off";
                readonly 'jsx-a11y/no-access-key': "off";
                readonly 'jsx-a11y/no-aria-hidden-on-focusable': "off";
                readonly 'jsx-a11y/no-autofocus': "off";
                readonly 'jsx-a11y/no-distracting-elements': "off";
                readonly 'jsx-a11y/no-redundant-roles': "off";
                readonly 'jsx-a11y/prefer-tag-over-role': "off";
                readonly 'jsx-a11y/role-has-required-aria-props': "off";
                readonly 'jsx-a11y/role-supports-aria-props': "off";
                readonly 'jsx-a11y/scope': "off";
                readonly 'jsx-a11y/tabindex-no-positive': "off";
            };
        };
        'flat/nextjs': {
            name: string;
            rules: {
                readonly '@next/next/google-font-display': "off";
                readonly '@next/next/google-font-preconnect': "off";
                readonly '@next/next/inline-script-id': "off";
                readonly '@next/next/next-script-for-ga': "off";
                readonly '@next/next/no-assign-module-variable': "off";
                readonly '@next/next/no-async-client-component': "off";
                readonly '@next/next/no-before-interactive-script-outside-document': "off";
                readonly '@next/next/no-css-tags': "off";
                readonly '@next/next/no-document-import-in-page': "off";
                readonly '@next/next/no-duplicate-head': "off";
                readonly '@next/next/no-head-element': "off";
                readonly '@next/next/no-head-import-in-document': "off";
                readonly '@next/next/no-img-element': "off";
                readonly '@next/next/no-page-custom-font': "off";
                readonly '@next/next/no-script-component-in-head': "off";
                readonly '@next/next/no-styled-jsx-in-document': "off";
                readonly '@next/next/no-sync-scripts': "off";
                readonly '@next/next/no-title-in-document-head': "off";
                readonly '@next/next/no-typos': "off";
                readonly '@next/next/no-unwanted-polyfillio': "off";
            };
        };
        'flat/node': {
            name: string;
            rules: {
                readonly 'node/no-exports-assign': "off";
                readonly 'node/no-new-require': "off";
            };
        };
        'flat/promise': {
            name: string;
            rules: {
                readonly 'promise/avoid-new': "off";
                readonly 'promise/catch-or-return': "off";
                readonly 'promise/no-callback-in-promise': "off";
                readonly 'promise/no-new-statics': "off";
                readonly 'promise/no-return-in-finally': "off";
                readonly 'promise/param-names': "off";
                readonly 'promise/prefer-await-to-callbacks': "off";
                readonly 'promise/prefer-await-to-then': "off";
                readonly 'promise/spec-only': "off";
                readonly 'promise/valid-params': "off";
            };
        };
        'flat/react': {
            name: string;
            rules: {
                readonly 'react/button-has-type': "off";
                readonly 'react/checked-requires-onchange-or-readonly': "off";
                readonly 'react/iframe-missing-sandbox': "off";
                readonly 'react/jsx-boolean-value': "off";
                readonly 'react/jsx-curly-brace-presence': "off";
                readonly 'react/jsx-key': "off";
                readonly 'react/jsx-no-comment-textnodes': "off";
                readonly 'react/jsx-no-duplicate-props': "off";
                readonly 'react/jsx-no-target-blank': "off";
                readonly 'react/jsx-no-undef': "off";
                readonly 'react/jsx-no-useless-fragment': "off";
                readonly 'react/jsx-props-no-spread-multi': "off";
                readonly 'react/no-children-prop': "off";
                readonly 'react/no-danger': "off";
                readonly 'react/no-danger-with-children': "off";
                readonly 'react/no-direct-mutation-state': "off";
                readonly 'react/no-find-dom-node': "off";
                readonly 'react/no-is-mounted': "off";
                readonly 'react/no-render-return-value': "off";
                readonly 'react/no-set-state': "off";
                readonly 'react/no-string-refs': "off";
                readonly 'react/no-unescaped-entities': "off";
                readonly 'react/no-unknown-property': "off";
                readonly 'react/prefer-es6-class': "off";
                readonly 'react/react-in-jsx-scope': "off";
                readonly 'react/require-render-return': "off";
                readonly 'react/self-closing-comp': "off";
                readonly 'react/style-prop-object': "off";
                readonly 'react/void-dom-elements-no-children': "off";
            };
        };
        'flat/react-hooks': {
            name: string;
            rules: {
                readonly 'react-hooks/rules-of-hooks': "off";
            };
        };
        'flat/react-perf': {
            name: string;
            rules: {
                readonly 'react-perf/jsx-no-jsx-as-prop': "off";
                readonly 'react-perf/jsx-no-new-array-as-prop': "off";
                readonly 'react-perf/jsx-no-new-function-as-prop': "off";
                readonly 'react-perf/jsx-no-new-object-as-prop': "off";
            };
        };
        'flat/tree-shaking': {
            name: string;
            rules: {
                readonly 'tree-shaking/no-side-effects-in-initialization': "off";
            };
        };
        'flat/unicorn': {
            name: string;
            rules: {
                readonly 'unicorn/catch-error-name': "off";
                readonly 'unicorn/consistent-empty-array-spread': "off";
                readonly 'unicorn/consistent-function-scoping': "off";
                readonly 'unicorn/empty-brace-spaces': "off";
                readonly 'unicorn/error-message': "off";
                readonly 'unicorn/escape-case': "off";
                readonly 'unicorn/explicit-length-check': "off";
                readonly 'unicorn/filename-case': "off";
                readonly 'unicorn/new-for-builtins': "off";
                readonly 'unicorn/no-abusive-eslint-disable': "off";
                readonly 'unicorn/no-anonymous-default-export': "off";
                readonly 'unicorn/no-array-for-each': "off";
                readonly 'unicorn/no-array-reduce': "off";
                readonly 'unicorn/no-await-expression-member': "off";
                readonly 'unicorn/no-await-in-promise-methods': "off";
                readonly 'unicorn/no-console-spaces': "off";
                readonly 'unicorn/no-document-cookie': "off";
                readonly 'unicorn/no-empty-file': "off";
                readonly 'unicorn/no-hex-escape': "off";
                readonly 'unicorn/no-instanceof-array': "off";
                readonly 'unicorn/no-invalid-remove-event-listener': "off";
                readonly 'unicorn/no-length-as-slice-end': "off";
                readonly 'unicorn/no-lonely-if': "off";
                readonly 'unicorn/no-magic-array-flat-depth': "off";
                readonly 'unicorn/no-negated-condition': "off";
                readonly 'unicorn/no-negation-in-equality-check': "off";
                readonly 'unicorn/no-nested-ternary': "off";
                readonly 'unicorn/no-new-array': "off";
                readonly 'unicorn/no-new-buffer': "off";
                readonly 'unicorn/no-null': "off";
                readonly 'unicorn/no-object-as-default-parameter': "off";
                readonly 'unicorn/no-process-exit': "off";
                readonly 'unicorn/no-single-promise-in-promise-methods': "off";
                readonly 'unicorn/no-static-only-class': "off";
                readonly 'unicorn/no-thenable': "off";
                readonly 'unicorn/no-this-assignment': "off";
                readonly 'unicorn/no-typeof-undefined': "off";
                readonly 'unicorn/no-unnecessary-await': "off";
                readonly 'unicorn/no-unreadable-array-destructuring': "off";
                readonly 'unicorn/no-unreadable-iife': "off";
                readonly 'unicorn/no-useless-fallback-in-spread': "off";
                readonly 'unicorn/no-useless-length-check': "off";
                readonly 'unicorn/no-useless-promise-resolve-reject': "off";
                readonly 'unicorn/no-useless-spread': "off";
                readonly 'unicorn/no-useless-switch-case': "off";
                readonly 'unicorn/no-useless-undefined': "off";
                readonly 'unicorn/no-zero-fractions': "off";
                readonly 'unicorn/number-literal-case': "off";
                readonly 'unicorn/numeric-separators-style': "off";
                readonly 'unicorn/prefer-add-event-listener': "off";
                readonly 'unicorn/prefer-array-flat': "off";
                readonly 'unicorn/prefer-array-flat-map': "off";
                readonly 'unicorn/prefer-array-some': "off";
                readonly 'unicorn/prefer-blob-reading-methods': "off";
                readonly 'unicorn/prefer-code-point': "off";
                readonly 'unicorn/prefer-date-now': "off";
                readonly 'unicorn/prefer-dom-node-append': "off";
                readonly 'unicorn/prefer-dom-node-dataset': "off";
                readonly 'unicorn/prefer-dom-node-remove': "off";
                readonly 'unicorn/prefer-dom-node-text-content': "off";
                readonly 'unicorn/prefer-event-target': "off";
                readonly 'unicorn/prefer-includes': "off";
                readonly 'unicorn/prefer-logical-operator-over-ternary': "off";
                readonly 'unicorn/prefer-math-min-max': "off";
                readonly 'unicorn/prefer-math-trunc': "off";
                readonly 'unicorn/prefer-modern-dom-apis': "off";
                readonly 'unicorn/prefer-modern-math-apis': "off";
                readonly 'unicorn/prefer-native-coercion-functions': "off";
                readonly 'unicorn/prefer-node-protocol': "off";
                readonly 'unicorn/prefer-number-properties': "off";
                readonly 'unicorn/prefer-optional-catch-binding': "off";
                readonly 'unicorn/prefer-prototype-methods': "off";
                readonly 'unicorn/prefer-query-selector': "off";
                readonly 'unicorn/prefer-reflect-apply': "off";
                readonly 'unicorn/prefer-regexp-test': "off";
                readonly 'unicorn/prefer-set-size': "off";
                readonly 'unicorn/prefer-spread': "off";
                readonly 'unicorn/prefer-string-replace-all': "off";
                readonly 'unicorn/prefer-string-slice': "off";
                readonly 'unicorn/prefer-string-starts-ends-with': "off";
                readonly 'unicorn/prefer-string-trim-start-end': "off";
                readonly 'unicorn/prefer-structured-clone': "off";
                readonly 'unicorn/prefer-type-error': "off";
                readonly 'unicorn/require-array-join-separator': "off";
                readonly 'unicorn/require-number-to-fixed-digits-argument': "off";
                readonly 'unicorn/switch-case-braces': "off";
                readonly 'unicorn/text-encoding-identifier-case': "off";
                readonly 'unicorn/throw-new-error': "off";
            };
        };
        'flat/vitest': {
            name: string;
            rules: {
                readonly 'vitest/no-conditional-tests': "off";
                readonly 'vitest/no-import-node-test': "off";
                readonly 'vitest/prefer-each': "off";
                readonly 'vitest/prefer-to-be-falsy': "off";
                readonly 'vitest/prefer-to-be-object': "off";
                readonly 'vitest/prefer-to-be-truthy': "off";
                readonly 'vitest/require-local-test-context-for-concurrent-snapshots': "off";
            };
        };
        recommended: {
            plugins: string[];
            rules: {
                readonly 'for-direction': "off";
                readonly 'no-async-promise-executor': "off";
                readonly 'no-caller': "off";
                readonly 'no-class-assign': "off";
                readonly 'no-compare-neg-zero': "off";
                readonly 'no-cond-assign': "off";
                readonly 'no-const-assign': "off";
                readonly 'no-constant-binary-expression': "off";
                readonly 'no-constant-condition': "off";
                readonly 'no-control-regex': "off";
                readonly 'no-debugger': "off";
                readonly 'no-delete-var': "off";
                readonly 'no-dupe-class-members': "off";
                readonly '@typescript-eslint/no-dupe-class-members': "off";
                readonly 'no-dupe-else-if': "off";
                readonly 'no-dupe-keys': "off";
                readonly 'no-duplicate-case': "off";
                readonly 'no-empty-character-class': "off";
                readonly 'no-empty-pattern': "off";
                readonly 'no-empty-static-block': "off";
                readonly 'no-ex-assign': "off";
                readonly 'no-extra-boolean-cast': "off";
                readonly 'no-func-assign': "off";
                readonly 'no-global-assign': "off";
                readonly 'no-import-assign': "off";
                readonly 'no-invalid-regexp': "off";
                readonly 'no-irregular-whitespace': "off";
                readonly 'no-loss-of-precision': "off";
                readonly '@typescript-eslint/no-loss-of-precision': "off";
                readonly 'no-new-native-nonconstructor': "off";
                readonly 'no-nonoctal-decimal-escape': "off";
                readonly 'no-obj-calls': "off";
                readonly 'no-self-assign': "off";
                readonly 'no-setter-return': "off";
                readonly 'no-shadow-restricted-names': "off";
                readonly 'no-sparse-arrays': "off";
                readonly 'no-this-before-super': "off";
                readonly 'no-unsafe-finally': "off";
                readonly 'no-unsafe-negation': "off";
                readonly 'no-unsafe-optional-chaining': "off";
                readonly 'no-unused-labels': "off";
                readonly 'no-unused-private-class-members': "off";
                readonly 'no-unused-vars': "off";
                readonly '@typescript-eslint/no-unused-vars': "off";
                readonly 'no-useless-catch': "off";
                readonly 'no-useless-escape': "off";
                readonly 'no-useless-rename': "off";
                readonly 'no-with': "off";
                readonly 'require-yield': "off";
                readonly 'use-isnan': "off";
                readonly 'valid-typeof': "off";
                readonly 'import/default': "off";
                readonly 'import/named': "off";
                readonly 'import/namespace': "off";
                readonly 'jest/expect-expect': "off";
                readonly 'jest/no-conditional-expect': "off";
                readonly 'jest/no-disabled-tests': "off";
                readonly 'jest/no-export': "off";
                readonly 'jest/no-focused-tests': "off";
                readonly 'jest/no-standalone-expect': "off";
                readonly 'jest/require-to-throw-message': "off";
                readonly 'jest/valid-describe-callback': "off";
                readonly 'jest/valid-expect': "off";
                readonly 'jest/valid-title': "off";
                readonly 'jsdoc/check-property-names': "off";
                readonly 'jsdoc/check-tag-names': "off";
                readonly 'jsdoc/implements-on-classes': "off";
                readonly 'jsdoc/no-defaults': "off";
                readonly 'jsdoc/require-property': "off";
                readonly 'jsdoc/require-property-description': "off";
                readonly 'jsdoc/require-property-name': "off";
                readonly 'jsdoc/require-property-type': "off";
                readonly 'jsdoc/require-yields': "off";
                readonly 'jsx-a11y/alt-text': "off";
                readonly 'jsx-a11y/anchor-has-content': "off";
                readonly 'jsx-a11y/anchor-is-valid': "off";
                readonly 'jsx-a11y/aria-activedescendant-has-tabindex': "off";
                readonly 'jsx-a11y/aria-props': "off";
                readonly 'jsx-a11y/aria-role': "off";
                readonly 'jsx-a11y/aria-unsupported-elements': "off";
                readonly 'jsx-a11y/autocomplete-valid': "off";
                readonly 'jsx-a11y/click-events-have-key-events': "off";
                readonly 'jsx-a11y/heading-has-content': "off";
                readonly 'jsx-a11y/html-has-lang': "off";
                readonly 'jsx-a11y/iframe-has-title': "off";
                readonly 'jsx-a11y/img-redundant-alt': "off";
                readonly 'jsx-a11y/label-has-associated-control': "off";
                readonly 'jsx-a11y/lang': "off";
                readonly 'jsx-a11y/media-has-caption': "off";
                readonly 'jsx-a11y/mouse-events-have-key-events': "off";
                readonly 'jsx-a11y/no-access-key': "off";
                readonly 'jsx-a11y/no-aria-hidden-on-focusable': "off";
                readonly 'jsx-a11y/no-autofocus': "off";
                readonly 'jsx-a11y/no-distracting-elements': "off";
                readonly 'jsx-a11y/no-redundant-roles': "off";
                readonly 'jsx-a11y/prefer-tag-over-role': "off";
                readonly 'jsx-a11y/role-has-required-aria-props': "off";
                readonly 'jsx-a11y/role-supports-aria-props': "off";
                readonly 'jsx-a11y/scope': "off";
                readonly 'jsx-a11y/tabindex-no-positive': "off";
                readonly '@next/next/google-font-display': "off";
                readonly '@next/next/google-font-preconnect': "off";
                readonly '@next/next/inline-script-id': "off";
                readonly '@next/next/next-script-for-ga': "off";
                readonly '@next/next/no-assign-module-variable': "off";
                readonly '@next/next/no-async-client-component': "off";
                readonly '@next/next/no-before-interactive-script-outside-document': "off";
                readonly '@next/next/no-css-tags': "off";
                readonly '@next/next/no-document-import-in-page': "off";
                readonly '@next/next/no-duplicate-head': "off";
                readonly '@next/next/no-head-element': "off";
                readonly '@next/next/no-head-import-in-document': "off";
                readonly '@next/next/no-img-element': "off";
                readonly '@next/next/no-page-custom-font': "off";
                readonly '@next/next/no-script-component-in-head': "off";
                readonly '@next/next/no-styled-jsx-in-document': "off";
                readonly '@next/next/no-sync-scripts': "off";
                readonly '@next/next/no-title-in-document-head': "off";
                readonly '@next/next/no-typos': "off";
                readonly '@next/next/no-unwanted-polyfillio': "off";
                readonly 'promise/no-callback-in-promise': "off";
                readonly 'promise/no-new-statics': "off";
                readonly 'promise/valid-params': "off";
                readonly 'react/jsx-key': "off";
                readonly 'react/jsx-no-duplicate-props': "off";
                readonly 'react/jsx-no-target-blank': "off";
                readonly 'react/jsx-no-undef': "off";
                readonly 'react/jsx-props-no-spread-multi': "off";
                readonly 'react/no-children-prop': "off";
                readonly 'react/no-danger-with-children': "off";
                readonly 'react/no-direct-mutation-state': "off";
                readonly 'react/no-find-dom-node': "off";
                readonly 'react/no-is-mounted': "off";
                readonly 'react/no-render-return-value': "off";
                readonly 'react/no-string-refs': "off";
                readonly 'react/void-dom-elements-no-children': "off";
                readonly '@typescript-eslint/no-duplicate-enum-values': "off";
                readonly '@typescript-eslint/no-extra-non-null-assertion': "off";
                readonly '@typescript-eslint/no-misused-new': "off";
                readonly '@typescript-eslint/no-non-null-asserted-optional-chain': "off";
                readonly '@typescript-eslint/no-this-alias': "off";
                readonly '@typescript-eslint/no-unsafe-declaration-merging': "off";
                readonly '@typescript-eslint/no-useless-empty-export': "off";
                readonly '@typescript-eslint/no-wrapper-object-types': "off";
                readonly '@typescript-eslint/prefer-as-const': "off";
                readonly '@typescript-eslint/triple-slash-reference': "off";
                readonly 'unicorn/no-await-in-promise-methods': "off";
                readonly 'unicorn/no-document-cookie': "off";
                readonly 'unicorn/no-empty-file': "off";
                readonly 'unicorn/no-invalid-remove-event-listener': "off";
                readonly 'unicorn/no-new-array': "off";
                readonly 'unicorn/no-single-promise-in-promise-methods': "off";
                readonly 'unicorn/no-thenable': "off";
                readonly 'unicorn/no-unnecessary-await': "off";
                readonly 'unicorn/no-useless-fallback-in-spread': "off";
                readonly 'unicorn/no-useless-length-check': "off";
                readonly 'unicorn/no-useless-spread': "off";
                readonly 'unicorn/prefer-set-size': "off";
                readonly 'unicorn/prefer-string-starts-ends-with': "off";
                readonly 'vitest/no-conditional-tests': "off";
                readonly 'vitest/require-local-test-context-for-concurrent-snapshots': "off";
            };
        };
        all: {
            plugins: string[];
            rules: {
                readonly 'array-callback-return': "off";
                readonly 'constructor-super': "off";
                readonly 'default-case': "off";
                readonly 'default-case-last': "off";
                readonly 'default-param-last': "off";
                readonly eqeqeq: "off";
                readonly 'for-direction': "off";
                readonly 'func-names': "off";
                readonly 'getter-return': "off";
                readonly 'guard-for-in': "off";
                readonly 'max-classes-per-file': "off";
                readonly 'max-lines': "off";
                readonly 'max-params': "off";
                readonly 'no-alert': "off";
                readonly 'no-array-constructor': "off";
                readonly 'no-async-promise-executor': "off";
                readonly 'no-await-in-loop': "off";
                readonly 'no-bitwise': "off";
                readonly 'no-caller': "off";
                readonly 'no-case-declarations': "off";
                readonly 'no-class-assign': "off";
                readonly 'no-compare-neg-zero': "off";
                readonly 'no-cond-assign': "off";
                readonly 'no-console': "off";
                readonly 'no-const-assign': "off";
                readonly 'no-constant-binary-expression': "off";
                readonly 'no-constant-condition': "off";
                readonly 'no-constructor-return': "off";
                readonly 'no-continue': "off";
                readonly 'no-control-regex': "off";
                readonly 'no-debugger': "off";
                readonly 'no-delete-var': "off";
                readonly 'no-div-regex': "off";
                readonly 'no-dupe-class-members': "off";
                readonly 'no-dupe-else-if': "off";
                readonly 'no-dupe-keys': "off";
                readonly 'no-duplicate-case': "off";
                readonly 'no-else-return': "off";
                readonly 'no-empty': "off";
                readonly 'no-empty-character-class': "off";
                readonly 'no-empty-function': "off";
                readonly 'no-empty-pattern': "off";
                readonly 'no-empty-static-block': "off";
                readonly 'no-eq-null': "off";
                readonly 'no-eval': "off";
                readonly 'no-ex-assign': "off";
                readonly 'no-extend-native': "off";
                readonly 'no-extra-boolean-cast': "off";
                readonly 'no-fallthrough': "off";
                readonly 'no-func-assign': "off";
                readonly 'no-global-assign': "off";
                readonly 'no-import-assign': "off";
                readonly 'no-inner-declarations': "off";
                readonly 'no-invalid-regexp': "off";
                readonly 'no-irregular-whitespace': "off";
                readonly 'no-iterator': "off";
                readonly 'no-label-var': "off";
                readonly 'no-loss-of-precision': "off";
                readonly 'no-magic-numbers': "off";
                readonly 'no-multi-str': "off";
                readonly 'no-new': "off";
                readonly 'no-new-func': "off";
                readonly 'no-new-native-nonconstructor': "off";
                readonly 'no-new-wrappers': "off";
                readonly 'no-nonoctal-decimal-escape': "off";
                readonly 'no-obj-calls': "off";
                readonly 'no-plusplus': "off";
                readonly 'no-proto': "off";
                readonly 'no-prototype-builtins': "off";
                readonly 'no-redeclare': "off";
                readonly 'no-regex-spaces': "off";
                readonly 'no-restricted-globals': "off";
                readonly 'no-return-assign': "off";
                readonly 'no-script-url': "off";
                readonly 'no-self-assign': "off";
                readonly 'no-self-compare': "off";
                readonly 'no-setter-return': "off";
                readonly 'no-shadow-restricted-names': "off";
                readonly 'no-sparse-arrays': "off";
                readonly 'no-template-curly-in-string': "off";
                readonly 'no-ternary': "off";
                readonly 'no-this-before-super': "off";
                readonly 'no-throw-literal': "off";
                readonly 'no-undef': "off";
                readonly 'no-undefined': "off";
                readonly 'no-unexpected-multiline': "off";
                readonly 'no-unreachable': "off";
                readonly 'no-unsafe-finally': "off";
                readonly 'no-unsafe-negation': "off";
                readonly 'no-unsafe-optional-chaining': "off";
                readonly 'no-unused-labels': "off";
                readonly 'no-unused-private-class-members': "off";
                readonly 'no-unused-vars': "off";
                readonly 'no-useless-catch': "off";
                readonly 'no-useless-concat': "off";
                readonly 'no-useless-constructor': "off";
                readonly 'no-useless-escape': "off";
                readonly 'no-useless-rename': "off";
                readonly 'no-var': "off";
                readonly 'no-void': "off";
                readonly 'no-with': "off";
                readonly 'prefer-exponentiation-operator': "off";
                readonly 'prefer-numeric-literals': "off";
                readonly 'prefer-object-has-own': "off";
                readonly radix: "off";
                readonly 'require-await': "off";
                readonly 'require-yield': "off";
                readonly 'sort-imports': "off";
                readonly 'sort-keys': "off";
                readonly 'sort-vars': "off";
                readonly 'symbol-description': "off";
                readonly 'unicode-bom': "off";
                readonly 'use-isnan': "off";
                readonly 'valid-typeof': "off";
            } & {
                readonly '@typescript-eslint/default-param-last': "off";
                readonly '@typescript-eslint/max-params': "off";
                readonly '@typescript-eslint/no-array-constructor': "off";
                readonly '@typescript-eslint/no-dupe-class-members': "off";
                readonly '@typescript-eslint/no-empty-function': "off";
                readonly '@typescript-eslint/no-loss-of-precision': "off";
                readonly '@typescript-eslint/no-magic-numbers': "off";
                readonly '@typescript-eslint/no-redeclare': "off";
                readonly '@typescript-eslint/no-unused-vars': "off";
                readonly '@typescript-eslint/no-useless-constructor': "off";
                readonly '@typescript-eslint/adjacent-overload-signatures': "off";
                readonly '@typescript-eslint/array-type': "off";
                readonly '@typescript-eslint/ban-ts-comment': "off";
                readonly '@typescript-eslint/ban-tslint-comment': "off";
                readonly '@typescript-eslint/ban-types': "off";
                readonly '@typescript-eslint/consistent-indexed-object-style': "off";
                readonly '@typescript-eslint/consistent-type-definitions': "off";
                readonly '@typescript-eslint/consistent-type-imports': "off";
                readonly '@typescript-eslint/explicit-function-return-type': "off";
                readonly '@typescript-eslint/no-confusing-non-null-assertion': "off";
                readonly '@typescript-eslint/no-duplicate-enum-values': "off";
                readonly '@typescript-eslint/no-dynamic-delete': "off";
                readonly '@typescript-eslint/no-empty-interface': "off";
                readonly '@typescript-eslint/no-explicit-any': "off";
                readonly '@typescript-eslint/no-extra-non-null-assertion': "off";
                readonly '@typescript-eslint/no-extraneous-class': "off";
                readonly '@typescript-eslint/no-import-type-side-effects': "off";
                readonly '@typescript-eslint/no-misused-new': "off";
                readonly '@typescript-eslint/no-namespace': "off";
                readonly '@typescript-eslint/no-non-null-asserted-nullish-coalescing': "off";
                readonly '@typescript-eslint/no-non-null-asserted-optional-chain': "off";
                readonly '@typescript-eslint/no-non-null-assertion': "off";
                readonly '@typescript-eslint/no-this-alias': "off";
                readonly '@typescript-eslint/no-unnecessary-type-constraint': "off";
                readonly '@typescript-eslint/no-unsafe-declaration-merging': "off";
                readonly '@typescript-eslint/no-unsafe-function-type': "off";
                readonly '@typescript-eslint/no-useless-empty-export': "off";
                readonly '@typescript-eslint/no-var-requires': "off";
                readonly '@typescript-eslint/no-wrapper-object-types': "off";
                readonly '@typescript-eslint/prefer-as-const': "off";
                readonly '@typescript-eslint/prefer-enum-initializers': "off";
                readonly '@typescript-eslint/prefer-for-of': "off";
                readonly '@typescript-eslint/prefer-function-type': "off";
                readonly '@typescript-eslint/prefer-literal-enum-member': "off";
                readonly '@typescript-eslint/prefer-namespace-keyword': "off";
                readonly '@typescript-eslint/prefer-ts-expect-error': "off";
                readonly '@typescript-eslint/triple-slash-reference': "off";
            } & {
                readonly 'import/default': "off";
                readonly 'import/export': "off";
                readonly 'import/first': "off";
                readonly 'import/max-dependencies': "off";
                readonly 'import/named': "off";
                readonly 'import/namespace': "off";
                readonly 'import/no-amd': "off";
                readonly 'import/no-commonjs': "off";
                readonly 'import/no-cycle': "off";
                readonly 'import/no-default-export': "off";
                readonly 'import/no-deprecated': "off";
                readonly 'import/no-duplicates': "off";
                readonly 'import/no-dynamic-require': "off";
                readonly 'import/no-named-as-default': "off";
                readonly 'import/no-named-as-default-member': "off";
                readonly 'import/no-self-import': "off";
                readonly 'import/no-unused-modules': "off";
                readonly 'import/no-webpack-loader-syntax': "off";
                readonly 'import/unambiguous': "off";
            } & {
                readonly 'jest/consistent-test-it': "off";
                readonly 'jest/expect-expect': "off";
                readonly 'jest/max-expects': "off";
                readonly 'jest/max-nested-describe': "off";
                readonly 'jest/no-alias-methods': "off";
                readonly 'jest/no-commented-out-tests': "off";
                readonly 'jest/no-conditional-expect': "off";
                readonly 'jest/no-conditional-in-test': "off";
                readonly 'jest/no-confusing-set-timeout': "off";
                readonly 'jest/no-deprecated-functions': "off";
                readonly 'jest/no-disabled-tests': "off";
                readonly 'jest/no-done-callback': "off";
                readonly 'jest/no-duplicate-hooks': "off";
                readonly 'jest/no-export': "off";
                readonly 'jest/no-focused-tests': "off";
                readonly 'jest/no-hooks': "off";
                readonly 'jest/no-identical-title': "off";
                readonly 'jest/no-interpolation-in-snapshots': "off";
                readonly 'jest/no-jasmine-globals': "off";
                readonly 'jest/no-large-snapshots': "off";
                readonly 'jest/no-mocks-import': "off";
                readonly 'jest/no-restricted-jest-methods': "off";
                readonly 'jest/no-restricted-matchers': "off";
                readonly 'jest/no-standalone-expect': "off";
                readonly 'jest/no-test-prefixes': "off";
                readonly 'jest/no-test-return-statement': "off";
                readonly 'jest/no-untyped-mock-factory': "off";
                readonly 'jest/prefer-called-with': "off";
                readonly 'jest/prefer-comparison-matcher': "off";
                readonly 'jest/prefer-equality-matcher': "off";
                readonly 'jest/prefer-expect-resolves': "off";
                readonly 'jest/prefer-hooks-in-order': "off";
                readonly 'jest/prefer-hooks-on-top': "off";
                readonly 'jest/prefer-jest-mocked': "off";
                readonly 'jest/prefer-lowercase-title': "off";
                readonly 'jest/prefer-mock-promise-shorthand': "off";
                readonly 'jest/prefer-spy-on': "off";
                readonly 'jest/prefer-strict-equal': "off";
                readonly 'jest/prefer-to-be': "off";
                readonly 'jest/prefer-to-contain': "off";
                readonly 'jest/prefer-to-have-length': "off";
                readonly 'jest/prefer-todo': "off";
                readonly 'jest/require-hook': "off";
                readonly 'jest/require-to-throw-message': "off";
                readonly 'jest/require-top-level-describe': "off";
                readonly 'jest/valid-describe-callback': "off";
                readonly 'jest/valid-expect': "off";
                readonly 'jest/valid-title': "off";
            } & {
                readonly 'jsdoc/check-access': "off";
                readonly 'jsdoc/check-property-names': "off";
                readonly 'jsdoc/check-tag-names': "off";
                readonly 'jsdoc/empty-tags': "off";
                readonly 'jsdoc/implements-on-classes': "off";
                readonly 'jsdoc/no-defaults': "off";
                readonly 'jsdoc/require-param': "off";
                readonly 'jsdoc/require-param-description': "off";
                readonly 'jsdoc/require-param-name': "off";
                readonly 'jsdoc/require-param-type': "off";
                readonly 'jsdoc/require-property': "off";
                readonly 'jsdoc/require-property-description': "off";
                readonly 'jsdoc/require-property-name': "off";
                readonly 'jsdoc/require-property-type': "off";
                readonly 'jsdoc/require-returns': "off";
                readonly 'jsdoc/require-returns-description': "off";
                readonly 'jsdoc/require-returns-type': "off";
                readonly 'jsdoc/require-yields': "off";
            } & {
                readonly 'jsx-a11y/alt-text': "off";
                readonly 'jsx-a11y/anchor-has-content': "off";
                readonly 'jsx-a11y/anchor-is-valid': "off";
                readonly 'jsx-a11y/aria-activedescendant-has-tabindex': "off";
                readonly 'jsx-a11y/aria-props': "off";
                readonly 'jsx-a11y/aria-role': "off";
                readonly 'jsx-a11y/aria-unsupported-elements': "off";
                readonly 'jsx-a11y/autocomplete-valid': "off";
                readonly 'jsx-a11y/click-events-have-key-events': "off";
                readonly 'jsx-a11y/heading-has-content': "off";
                readonly 'jsx-a11y/html-has-lang': "off";
                readonly 'jsx-a11y/iframe-has-title': "off";
                readonly 'jsx-a11y/img-redundant-alt': "off";
                readonly 'jsx-a11y/label-has-associated-control': "off";
                readonly 'jsx-a11y/lang': "off";
                readonly 'jsx-a11y/media-has-caption': "off";
                readonly 'jsx-a11y/mouse-events-have-key-events': "off";
                readonly 'jsx-a11y/no-access-key': "off";
                readonly 'jsx-a11y/no-aria-hidden-on-focusable': "off";
                readonly 'jsx-a11y/no-autofocus': "off";
                readonly 'jsx-a11y/no-distracting-elements': "off";
                readonly 'jsx-a11y/no-redundant-roles': "off";
                readonly 'jsx-a11y/prefer-tag-over-role': "off";
                readonly 'jsx-a11y/role-has-required-aria-props': "off";
                readonly 'jsx-a11y/role-supports-aria-props': "off";
                readonly 'jsx-a11y/scope': "off";
                readonly 'jsx-a11y/tabindex-no-positive': "off";
            } & {
                readonly '@next/next/google-font-display': "off";
                readonly '@next/next/google-font-preconnect': "off";
                readonly '@next/next/inline-script-id': "off";
                readonly '@next/next/next-script-for-ga': "off";
                readonly '@next/next/no-assign-module-variable': "off";
                readonly '@next/next/no-async-client-component': "off";
                readonly '@next/next/no-before-interactive-script-outside-document': "off";
                readonly '@next/next/no-css-tags': "off";
                readonly '@next/next/no-document-import-in-page': "off";
                readonly '@next/next/no-duplicate-head': "off";
                readonly '@next/next/no-head-element': "off";
                readonly '@next/next/no-head-import-in-document': "off";
                readonly '@next/next/no-img-element': "off";
                readonly '@next/next/no-page-custom-font': "off";
                readonly '@next/next/no-script-component-in-head': "off";
                readonly '@next/next/no-styled-jsx-in-document': "off";
                readonly '@next/next/no-sync-scripts': "off";
                readonly '@next/next/no-title-in-document-head': "off";
                readonly '@next/next/no-typos': "off";
                readonly '@next/next/no-unwanted-polyfillio': "off";
            } & {
                readonly 'node/no-exports-assign': "off";
                readonly 'node/no-new-require': "off";
            } & {
                readonly 'promise/avoid-new': "off";
                readonly 'promise/catch-or-return': "off";
                readonly 'promise/no-callback-in-promise': "off";
                readonly 'promise/no-new-statics': "off";
                readonly 'promise/no-return-in-finally': "off";
                readonly 'promise/param-names': "off";
                readonly 'promise/prefer-await-to-callbacks': "off";
                readonly 'promise/prefer-await-to-then': "off";
                readonly 'promise/spec-only': "off";
                readonly 'promise/valid-params': "off";
            } & {
                readonly 'react/button-has-type': "off";
                readonly 'react/checked-requires-onchange-or-readonly': "off";
                readonly 'react/iframe-missing-sandbox': "off";
                readonly 'react/jsx-boolean-value': "off";
                readonly 'react/jsx-curly-brace-presence': "off";
                readonly 'react/jsx-key': "off";
                readonly 'react/jsx-no-comment-textnodes': "off";
                readonly 'react/jsx-no-duplicate-props': "off";
                readonly 'react/jsx-no-target-blank': "off";
                readonly 'react/jsx-no-undef': "off";
                readonly 'react/jsx-no-useless-fragment': "off";
                readonly 'react/jsx-props-no-spread-multi': "off";
                readonly 'react/no-children-prop': "off";
                readonly 'react/no-danger': "off";
                readonly 'react/no-danger-with-children': "off";
                readonly 'react/no-direct-mutation-state': "off";
                readonly 'react/no-find-dom-node': "off";
                readonly 'react/no-is-mounted': "off";
                readonly 'react/no-render-return-value': "off";
                readonly 'react/no-set-state': "off";
                readonly 'react/no-string-refs': "off";
                readonly 'react/no-unescaped-entities': "off";
                readonly 'react/no-unknown-property': "off";
                readonly 'react/prefer-es6-class': "off";
                readonly 'react/react-in-jsx-scope': "off";
                readonly 'react/require-render-return': "off";
                readonly 'react/self-closing-comp': "off";
                readonly 'react/style-prop-object': "off";
                readonly 'react/void-dom-elements-no-children': "off";
            } & {
                readonly 'react-hooks/rules-of-hooks': "off";
            } & {
                readonly 'react-perf/jsx-no-jsx-as-prop': "off";
                readonly 'react-perf/jsx-no-new-array-as-prop': "off";
                readonly 'react-perf/jsx-no-new-function-as-prop': "off";
                readonly 'react-perf/jsx-no-new-object-as-prop': "off";
            } & {
                readonly 'tree-shaking/no-side-effects-in-initialization': "off";
            } & {
                readonly 'unicorn/catch-error-name': "off";
                readonly 'unicorn/consistent-empty-array-spread': "off";
                readonly 'unicorn/consistent-function-scoping': "off";
                readonly 'unicorn/empty-brace-spaces': "off";
                readonly 'unicorn/error-message': "off";
                readonly 'unicorn/escape-case': "off";
                readonly 'unicorn/explicit-length-check': "off";
                readonly 'unicorn/filename-case': "off";
                readonly 'unicorn/new-for-builtins': "off";
                readonly 'unicorn/no-abusive-eslint-disable': "off";
                readonly 'unicorn/no-anonymous-default-export': "off";
                readonly 'unicorn/no-array-for-each': "off";
                readonly 'unicorn/no-array-reduce': "off";
                readonly 'unicorn/no-await-expression-member': "off";
                readonly 'unicorn/no-await-in-promise-methods': "off";
                readonly 'unicorn/no-console-spaces': "off";
                readonly 'unicorn/no-document-cookie': "off";
                readonly 'unicorn/no-empty-file': "off";
                readonly 'unicorn/no-hex-escape': "off";
                readonly 'unicorn/no-instanceof-array': "off";
                readonly 'unicorn/no-invalid-remove-event-listener': "off";
                readonly 'unicorn/no-length-as-slice-end': "off";
                readonly 'unicorn/no-lonely-if': "off";
                readonly 'unicorn/no-magic-array-flat-depth': "off";
                readonly 'unicorn/no-negated-condition': "off";
                readonly 'unicorn/no-negation-in-equality-check': "off";
                readonly 'unicorn/no-nested-ternary': "off";
                readonly 'unicorn/no-new-array': "off";
                readonly 'unicorn/no-new-buffer': "off";
                readonly 'unicorn/no-null': "off";
                readonly 'unicorn/no-object-as-default-parameter': "off";
                readonly 'unicorn/no-process-exit': "off";
                readonly 'unicorn/no-single-promise-in-promise-methods': "off";
                readonly 'unicorn/no-static-only-class': "off";
                readonly 'unicorn/no-thenable': "off";
                readonly 'unicorn/no-this-assignment': "off";
                readonly 'unicorn/no-typeof-undefined': "off";
                readonly 'unicorn/no-unnecessary-await': "off";
                readonly 'unicorn/no-unreadable-array-destructuring': "off";
                readonly 'unicorn/no-unreadable-iife': "off";
                readonly 'unicorn/no-useless-fallback-in-spread': "off";
                readonly 'unicorn/no-useless-length-check': "off";
                readonly 'unicorn/no-useless-promise-resolve-reject': "off";
                readonly 'unicorn/no-useless-spread': "off";
                readonly 'unicorn/no-useless-switch-case': "off";
                readonly 'unicorn/no-useless-undefined': "off";
                readonly 'unicorn/no-zero-fractions': "off";
                readonly 'unicorn/number-literal-case': "off";
                readonly 'unicorn/numeric-separators-style': "off";
                readonly 'unicorn/prefer-add-event-listener': "off";
                readonly 'unicorn/prefer-array-flat': "off";
                readonly 'unicorn/prefer-array-flat-map': "off";
                readonly 'unicorn/prefer-array-some': "off";
                readonly 'unicorn/prefer-blob-reading-methods': "off";
                readonly 'unicorn/prefer-code-point': "off";
                readonly 'unicorn/prefer-date-now': "off";
                readonly 'unicorn/prefer-dom-node-append': "off";
                readonly 'unicorn/prefer-dom-node-dataset': "off";
                readonly 'unicorn/prefer-dom-node-remove': "off";
                readonly 'unicorn/prefer-dom-node-text-content': "off";
                readonly 'unicorn/prefer-event-target': "off";
                readonly 'unicorn/prefer-includes': "off";
                readonly 'unicorn/prefer-logical-operator-over-ternary': "off";
                readonly 'unicorn/prefer-math-min-max': "off";
                readonly 'unicorn/prefer-math-trunc': "off";
                readonly 'unicorn/prefer-modern-dom-apis': "off";
                readonly 'unicorn/prefer-modern-math-apis': "off";
                readonly 'unicorn/prefer-native-coercion-functions': "off";
                readonly 'unicorn/prefer-node-protocol': "off";
                readonly 'unicorn/prefer-number-properties': "off";
                readonly 'unicorn/prefer-optional-catch-binding': "off";
                readonly 'unicorn/prefer-prototype-methods': "off";
                readonly 'unicorn/prefer-query-selector': "off";
                readonly 'unicorn/prefer-reflect-apply': "off";
                readonly 'unicorn/prefer-regexp-test': "off";
                readonly 'unicorn/prefer-set-size': "off";
                readonly 'unicorn/prefer-spread': "off";
                readonly 'unicorn/prefer-string-replace-all': "off";
                readonly 'unicorn/prefer-string-slice': "off";
                readonly 'unicorn/prefer-string-starts-ends-with': "off";
                readonly 'unicorn/prefer-string-trim-start-end': "off";
                readonly 'unicorn/prefer-structured-clone': "off";
                readonly 'unicorn/prefer-type-error': "off";
                readonly 'unicorn/require-array-join-separator': "off";
                readonly 'unicorn/require-number-to-fixed-digits-argument': "off";
                readonly 'unicorn/switch-case-braces': "off";
                readonly 'unicorn/text-encoding-identifier-case': "off";
                readonly 'unicorn/throw-new-error': "off";
            } & {
                readonly 'vitest/no-conditional-tests': "off";
                readonly 'vitest/no-import-node-test': "off";
                readonly 'vitest/prefer-each': "off";
                readonly 'vitest/prefer-to-be-falsy': "off";
                readonly 'vitest/prefer-to-be-object': "off";
                readonly 'vitest/prefer-to-be-truthy': "off";
                readonly 'vitest/require-local-test-context-for-concurrent-snapshots': "off";
            };
        };
        'flat/all': {
            name: string;
            rules: {
                readonly 'array-callback-return': "off";
                readonly 'constructor-super': "off";
                readonly 'default-case': "off";
                readonly 'default-case-last': "off";
                readonly 'default-param-last': "off";
                readonly eqeqeq: "off";
                readonly 'for-direction': "off";
                readonly 'func-names': "off";
                readonly 'getter-return': "off";
                readonly 'guard-for-in': "off";
                readonly 'max-classes-per-file': "off";
                readonly 'max-lines': "off";
                readonly 'max-params': "off";
                readonly 'no-alert': "off";
                readonly 'no-array-constructor': "off";
                readonly 'no-async-promise-executor': "off";
                readonly 'no-await-in-loop': "off";
                readonly 'no-bitwise': "off";
                readonly 'no-caller': "off";
                readonly 'no-case-declarations': "off";
                readonly 'no-class-assign': "off";
                readonly 'no-compare-neg-zero': "off";
                readonly 'no-cond-assign': "off";
                readonly 'no-console': "off";
                readonly 'no-const-assign': "off";
                readonly 'no-constant-binary-expression': "off";
                readonly 'no-constant-condition': "off";
                readonly 'no-constructor-return': "off";
                readonly 'no-continue': "off";
                readonly 'no-control-regex': "off";
                readonly 'no-debugger': "off";
                readonly 'no-delete-var': "off";
                readonly 'no-div-regex': "off";
                readonly 'no-dupe-class-members': "off";
                readonly 'no-dupe-else-if': "off";
                readonly 'no-dupe-keys': "off";
                readonly 'no-duplicate-case': "off";
                readonly 'no-else-return': "off";
                readonly 'no-empty': "off";
                readonly 'no-empty-character-class': "off";
                readonly 'no-empty-function': "off";
                readonly 'no-empty-pattern': "off";
                readonly 'no-empty-static-block': "off";
                readonly 'no-eq-null': "off";
                readonly 'no-eval': "off";
                readonly 'no-ex-assign': "off";
                readonly 'no-extend-native': "off";
                readonly 'no-extra-boolean-cast': "off";
                readonly 'no-fallthrough': "off";
                readonly 'no-func-assign': "off";
                readonly 'no-global-assign': "off";
                readonly 'no-import-assign': "off";
                readonly 'no-inner-declarations': "off";
                readonly 'no-invalid-regexp': "off";
                readonly 'no-irregular-whitespace': "off";
                readonly 'no-iterator': "off";
                readonly 'no-label-var': "off";
                readonly 'no-loss-of-precision': "off";
                readonly 'no-magic-numbers': "off";
                readonly 'no-multi-str': "off";
                readonly 'no-new': "off";
                readonly 'no-new-func': "off";
                readonly 'no-new-native-nonconstructor': "off";
                readonly 'no-new-wrappers': "off";
                readonly 'no-nonoctal-decimal-escape': "off";
                readonly 'no-obj-calls': "off";
                readonly 'no-plusplus': "off";
                readonly 'no-proto': "off";
                readonly 'no-prototype-builtins': "off";
                readonly 'no-redeclare': "off";
                readonly 'no-regex-spaces': "off";
                readonly 'no-restricted-globals': "off";
                readonly 'no-return-assign': "off";
                readonly 'no-script-url': "off";
                readonly 'no-self-assign': "off";
                readonly 'no-self-compare': "off";
                readonly 'no-setter-return': "off";
                readonly 'no-shadow-restricted-names': "off";
                readonly 'no-sparse-arrays': "off";
                readonly 'no-template-curly-in-string': "off";
                readonly 'no-ternary': "off";
                readonly 'no-this-before-super': "off";
                readonly 'no-throw-literal': "off";
                readonly 'no-undef': "off";
                readonly 'no-undefined': "off";
                readonly 'no-unexpected-multiline': "off";
                readonly 'no-unreachable': "off";
                readonly 'no-unsafe-finally': "off";
                readonly 'no-unsafe-negation': "off";
                readonly 'no-unsafe-optional-chaining': "off";
                readonly 'no-unused-labels': "off";
                readonly 'no-unused-private-class-members': "off";
                readonly 'no-unused-vars': "off";
                readonly 'no-useless-catch': "off";
                readonly 'no-useless-concat': "off";
                readonly 'no-useless-constructor': "off";
                readonly 'no-useless-escape': "off";
                readonly 'no-useless-rename': "off";
                readonly 'no-var': "off";
                readonly 'no-void': "off";
                readonly 'no-with': "off";
                readonly 'prefer-exponentiation-operator': "off";
                readonly 'prefer-numeric-literals': "off";
                readonly 'prefer-object-has-own': "off";
                readonly radix: "off";
                readonly 'require-await': "off";
                readonly 'require-yield': "off";
                readonly 'sort-imports': "off";
                readonly 'sort-keys': "off";
                readonly 'sort-vars': "off";
                readonly 'symbol-description': "off";
                readonly 'unicode-bom': "off";
                readonly 'use-isnan': "off";
                readonly 'valid-typeof': "off";
            } & {
                readonly '@typescript-eslint/default-param-last': "off";
                readonly '@typescript-eslint/max-params': "off";
                readonly '@typescript-eslint/no-array-constructor': "off";
                readonly '@typescript-eslint/no-dupe-class-members': "off";
                readonly '@typescript-eslint/no-empty-function': "off";
                readonly '@typescript-eslint/no-loss-of-precision': "off";
                readonly '@typescript-eslint/no-magic-numbers': "off";
                readonly '@typescript-eslint/no-redeclare': "off";
                readonly '@typescript-eslint/no-unused-vars': "off";
                readonly '@typescript-eslint/no-useless-constructor': "off";
                readonly '@typescript-eslint/adjacent-overload-signatures': "off";
                readonly '@typescript-eslint/array-type': "off";
                readonly '@typescript-eslint/ban-ts-comment': "off";
                readonly '@typescript-eslint/ban-tslint-comment': "off";
                readonly '@typescript-eslint/ban-types': "off";
                readonly '@typescript-eslint/consistent-indexed-object-style': "off";
                readonly '@typescript-eslint/consistent-type-definitions': "off";
                readonly '@typescript-eslint/consistent-type-imports': "off";
                readonly '@typescript-eslint/explicit-function-return-type': "off";
                readonly '@typescript-eslint/no-confusing-non-null-assertion': "off";
                readonly '@typescript-eslint/no-duplicate-enum-values': "off";
                readonly '@typescript-eslint/no-dynamic-delete': "off";
                readonly '@typescript-eslint/no-empty-interface': "off";
                readonly '@typescript-eslint/no-explicit-any': "off";
                readonly '@typescript-eslint/no-extra-non-null-assertion': "off";
                readonly '@typescript-eslint/no-extraneous-class': "off";
                readonly '@typescript-eslint/no-import-type-side-effects': "off";
                readonly '@typescript-eslint/no-misused-new': "off";
                readonly '@typescript-eslint/no-namespace': "off";
                readonly '@typescript-eslint/no-non-null-asserted-nullish-coalescing': "off";
                readonly '@typescript-eslint/no-non-null-asserted-optional-chain': "off";
                readonly '@typescript-eslint/no-non-null-assertion': "off";
                readonly '@typescript-eslint/no-this-alias': "off";
                readonly '@typescript-eslint/no-unnecessary-type-constraint': "off";
                readonly '@typescript-eslint/no-unsafe-declaration-merging': "off";
                readonly '@typescript-eslint/no-unsafe-function-type': "off";
                readonly '@typescript-eslint/no-useless-empty-export': "off";
                readonly '@typescript-eslint/no-var-requires': "off";
                readonly '@typescript-eslint/no-wrapper-object-types': "off";
                readonly '@typescript-eslint/prefer-as-const': "off";
                readonly '@typescript-eslint/prefer-enum-initializers': "off";
                readonly '@typescript-eslint/prefer-for-of': "off";
                readonly '@typescript-eslint/prefer-function-type': "off";
                readonly '@typescript-eslint/prefer-literal-enum-member': "off";
                readonly '@typescript-eslint/prefer-namespace-keyword': "off";
                readonly '@typescript-eslint/prefer-ts-expect-error': "off";
                readonly '@typescript-eslint/triple-slash-reference': "off";
            } & {
                readonly 'import/default': "off";
                readonly 'import/export': "off";
                readonly 'import/first': "off";
                readonly 'import/max-dependencies': "off";
                readonly 'import/named': "off";
                readonly 'import/namespace': "off";
                readonly 'import/no-amd': "off";
                readonly 'import/no-commonjs': "off";
                readonly 'import/no-cycle': "off";
                readonly 'import/no-default-export': "off";
                readonly 'import/no-deprecated': "off";
                readonly 'import/no-duplicates': "off";
                readonly 'import/no-dynamic-require': "off";
                readonly 'import/no-named-as-default': "off";
                readonly 'import/no-named-as-default-member': "off";
                readonly 'import/no-self-import': "off";
                readonly 'import/no-unused-modules': "off";
                readonly 'import/no-webpack-loader-syntax': "off";
                readonly 'import/unambiguous': "off";
            } & {
                readonly 'jest/consistent-test-it': "off";
                readonly 'jest/expect-expect': "off";
                readonly 'jest/max-expects': "off";
                readonly 'jest/max-nested-describe': "off";
                readonly 'jest/no-alias-methods': "off";
                readonly 'jest/no-commented-out-tests': "off";
                readonly 'jest/no-conditional-expect': "off";
                readonly 'jest/no-conditional-in-test': "off";
                readonly 'jest/no-confusing-set-timeout': "off";
                readonly 'jest/no-deprecated-functions': "off";
                readonly 'jest/no-disabled-tests': "off";
                readonly 'jest/no-done-callback': "off";
                readonly 'jest/no-duplicate-hooks': "off";
                readonly 'jest/no-export': "off";
                readonly 'jest/no-focused-tests': "off";
                readonly 'jest/no-hooks': "off";
                readonly 'jest/no-identical-title': "off";
                readonly 'jest/no-interpolation-in-snapshots': "off";
                readonly 'jest/no-jasmine-globals': "off";
                readonly 'jest/no-large-snapshots': "off";
                readonly 'jest/no-mocks-import': "off";
                readonly 'jest/no-restricted-jest-methods': "off";
                readonly 'jest/no-restricted-matchers': "off";
                readonly 'jest/no-standalone-expect': "off";
                readonly 'jest/no-test-prefixes': "off";
                readonly 'jest/no-test-return-statement': "off";
                readonly 'jest/no-untyped-mock-factory': "off";
                readonly 'jest/prefer-called-with': "off";
                readonly 'jest/prefer-comparison-matcher': "off";
                readonly 'jest/prefer-equality-matcher': "off";
                readonly 'jest/prefer-expect-resolves': "off";
                readonly 'jest/prefer-hooks-in-order': "off";
                readonly 'jest/prefer-hooks-on-top': "off";
                readonly 'jest/prefer-jest-mocked': "off";
                readonly 'jest/prefer-lowercase-title': "off";
                readonly 'jest/prefer-mock-promise-shorthand': "off";
                readonly 'jest/prefer-spy-on': "off";
                readonly 'jest/prefer-strict-equal': "off";
                readonly 'jest/prefer-to-be': "off";
                readonly 'jest/prefer-to-contain': "off";
                readonly 'jest/prefer-to-have-length': "off";
                readonly 'jest/prefer-todo': "off";
                readonly 'jest/require-hook': "off";
                readonly 'jest/require-to-throw-message': "off";
                readonly 'jest/require-top-level-describe': "off";
                readonly 'jest/valid-describe-callback': "off";
                readonly 'jest/valid-expect': "off";
                readonly 'jest/valid-title': "off";
            } & {
                readonly 'jsdoc/check-access': "off";
                readonly 'jsdoc/check-property-names': "off";
                readonly 'jsdoc/check-tag-names': "off";
                readonly 'jsdoc/empty-tags': "off";
                readonly 'jsdoc/implements-on-classes': "off";
                readonly 'jsdoc/no-defaults': "off";
                readonly 'jsdoc/require-param': "off";
                readonly 'jsdoc/require-param-description': "off";
                readonly 'jsdoc/require-param-name': "off";
                readonly 'jsdoc/require-param-type': "off";
                readonly 'jsdoc/require-property': "off";
                readonly 'jsdoc/require-property-description': "off";
                readonly 'jsdoc/require-property-name': "off";
                readonly 'jsdoc/require-property-type': "off";
                readonly 'jsdoc/require-returns': "off";
                readonly 'jsdoc/require-returns-description': "off";
                readonly 'jsdoc/require-returns-type': "off";
                readonly 'jsdoc/require-yields': "off";
            } & {
                readonly 'jsx-a11y/alt-text': "off";
                readonly 'jsx-a11y/anchor-has-content': "off";
                readonly 'jsx-a11y/anchor-is-valid': "off";
                readonly 'jsx-a11y/aria-activedescendant-has-tabindex': "off";
                readonly 'jsx-a11y/aria-props': "off";
                readonly 'jsx-a11y/aria-role': "off";
                readonly 'jsx-a11y/aria-unsupported-elements': "off";
                readonly 'jsx-a11y/autocomplete-valid': "off";
                readonly 'jsx-a11y/click-events-have-key-events': "off";
                readonly 'jsx-a11y/heading-has-content': "off";
                readonly 'jsx-a11y/html-has-lang': "off";
                readonly 'jsx-a11y/iframe-has-title': "off";
                readonly 'jsx-a11y/img-redundant-alt': "off";
                readonly 'jsx-a11y/label-has-associated-control': "off";
                readonly 'jsx-a11y/lang': "off";
                readonly 'jsx-a11y/media-has-caption': "off";
                readonly 'jsx-a11y/mouse-events-have-key-events': "off";
                readonly 'jsx-a11y/no-access-key': "off";
                readonly 'jsx-a11y/no-aria-hidden-on-focusable': "off";
                readonly 'jsx-a11y/no-autofocus': "off";
                readonly 'jsx-a11y/no-distracting-elements': "off";
                readonly 'jsx-a11y/no-redundant-roles': "off";
                readonly 'jsx-a11y/prefer-tag-over-role': "off";
                readonly 'jsx-a11y/role-has-required-aria-props': "off";
                readonly 'jsx-a11y/role-supports-aria-props': "off";
                readonly 'jsx-a11y/scope': "off";
                readonly 'jsx-a11y/tabindex-no-positive': "off";
            } & {
                readonly '@next/next/google-font-display': "off";
                readonly '@next/next/google-font-preconnect': "off";
                readonly '@next/next/inline-script-id': "off";
                readonly '@next/next/next-script-for-ga': "off";
                readonly '@next/next/no-assign-module-variable': "off";
                readonly '@next/next/no-async-client-component': "off";
                readonly '@next/next/no-before-interactive-script-outside-document': "off";
                readonly '@next/next/no-css-tags': "off";
                readonly '@next/next/no-document-import-in-page': "off";
                readonly '@next/next/no-duplicate-head': "off";
                readonly '@next/next/no-head-element': "off";
                readonly '@next/next/no-head-import-in-document': "off";
                readonly '@next/next/no-img-element': "off";
                readonly '@next/next/no-page-custom-font': "off";
                readonly '@next/next/no-script-component-in-head': "off";
                readonly '@next/next/no-styled-jsx-in-document': "off";
                readonly '@next/next/no-sync-scripts': "off";
                readonly '@next/next/no-title-in-document-head': "off";
                readonly '@next/next/no-typos': "off";
                readonly '@next/next/no-unwanted-polyfillio': "off";
            } & {
                readonly 'node/no-exports-assign': "off";
                readonly 'node/no-new-require': "off";
            } & {
                readonly 'promise/avoid-new': "off";
                readonly 'promise/catch-or-return': "off";
                readonly 'promise/no-callback-in-promise': "off";
                readonly 'promise/no-new-statics': "off";
                readonly 'promise/no-return-in-finally': "off";
                readonly 'promise/param-names': "off";
                readonly 'promise/prefer-await-to-callbacks': "off";
                readonly 'promise/prefer-await-to-then': "off";
                readonly 'promise/spec-only': "off";
                readonly 'promise/valid-params': "off";
            } & {
                readonly 'react/button-has-type': "off";
                readonly 'react/checked-requires-onchange-or-readonly': "off";
                readonly 'react/iframe-missing-sandbox': "off";
                readonly 'react/jsx-boolean-value': "off";
                readonly 'react/jsx-curly-brace-presence': "off";
                readonly 'react/jsx-key': "off";
                readonly 'react/jsx-no-comment-textnodes': "off";
                readonly 'react/jsx-no-duplicate-props': "off";
                readonly 'react/jsx-no-target-blank': "off";
                readonly 'react/jsx-no-undef': "off";
                readonly 'react/jsx-no-useless-fragment': "off";
                readonly 'react/jsx-props-no-spread-multi': "off";
                readonly 'react/no-children-prop': "off";
                readonly 'react/no-danger': "off";
                readonly 'react/no-danger-with-children': "off";
                readonly 'react/no-direct-mutation-state': "off";
                readonly 'react/no-find-dom-node': "off";
                readonly 'react/no-is-mounted': "off";
                readonly 'react/no-render-return-value': "off";
                readonly 'react/no-set-state': "off";
                readonly 'react/no-string-refs': "off";
                readonly 'react/no-unescaped-entities': "off";
                readonly 'react/no-unknown-property': "off";
                readonly 'react/prefer-es6-class': "off";
                readonly 'react/react-in-jsx-scope': "off";
                readonly 'react/require-render-return': "off";
                readonly 'react/self-closing-comp': "off";
                readonly 'react/style-prop-object': "off";
                readonly 'react/void-dom-elements-no-children': "off";
            } & {
                readonly 'react-hooks/rules-of-hooks': "off";
            } & {
                readonly 'react-perf/jsx-no-jsx-as-prop': "off";
                readonly 'react-perf/jsx-no-new-array-as-prop': "off";
                readonly 'react-perf/jsx-no-new-function-as-prop': "off";
                readonly 'react-perf/jsx-no-new-object-as-prop': "off";
            } & {
                readonly 'tree-shaking/no-side-effects-in-initialization': "off";
            } & {
                readonly 'unicorn/catch-error-name': "off";
                readonly 'unicorn/consistent-empty-array-spread': "off";
                readonly 'unicorn/consistent-function-scoping': "off";
                readonly 'unicorn/empty-brace-spaces': "off";
                readonly 'unicorn/error-message': "off";
                readonly 'unicorn/escape-case': "off";
                readonly 'unicorn/explicit-length-check': "off";
                readonly 'unicorn/filename-case': "off";
                readonly 'unicorn/new-for-builtins': "off";
                readonly 'unicorn/no-abusive-eslint-disable': "off";
                readonly 'unicorn/no-anonymous-default-export': "off";
                readonly 'unicorn/no-array-for-each': "off";
                readonly 'unicorn/no-array-reduce': "off";
                readonly 'unicorn/no-await-expression-member': "off";
                readonly 'unicorn/no-await-in-promise-methods': "off";
                readonly 'unicorn/no-console-spaces': "off";
                readonly 'unicorn/no-document-cookie': "off";
                readonly 'unicorn/no-empty-file': "off";
                readonly 'unicorn/no-hex-escape': "off";
                readonly 'unicorn/no-instanceof-array': "off";
                readonly 'unicorn/no-invalid-remove-event-listener': "off";
                readonly 'unicorn/no-length-as-slice-end': "off";
                readonly 'unicorn/no-lonely-if': "off";
                readonly 'unicorn/no-magic-array-flat-depth': "off";
                readonly 'unicorn/no-negated-condition': "off";
                readonly 'unicorn/no-negation-in-equality-check': "off";
                readonly 'unicorn/no-nested-ternary': "off";
                readonly 'unicorn/no-new-array': "off";
                readonly 'unicorn/no-new-buffer': "off";
                readonly 'unicorn/no-null': "off";
                readonly 'unicorn/no-object-as-default-parameter': "off";
                readonly 'unicorn/no-process-exit': "off";
                readonly 'unicorn/no-single-promise-in-promise-methods': "off";
                readonly 'unicorn/no-static-only-class': "off";
                readonly 'unicorn/no-thenable': "off";
                readonly 'unicorn/no-this-assignment': "off";
                readonly 'unicorn/no-typeof-undefined': "off";
                readonly 'unicorn/no-unnecessary-await': "off";
                readonly 'unicorn/no-unreadable-array-destructuring': "off";
                readonly 'unicorn/no-unreadable-iife': "off";
                readonly 'unicorn/no-useless-fallback-in-spread': "off";
                readonly 'unicorn/no-useless-length-check': "off";
                readonly 'unicorn/no-useless-promise-resolve-reject': "off";
                readonly 'unicorn/no-useless-spread': "off";
                readonly 'unicorn/no-useless-switch-case': "off";
                readonly 'unicorn/no-useless-undefined': "off";
                readonly 'unicorn/no-zero-fractions': "off";
                readonly 'unicorn/number-literal-case': "off";
                readonly 'unicorn/numeric-separators-style': "off";
                readonly 'unicorn/prefer-add-event-listener': "off";
                readonly 'unicorn/prefer-array-flat': "off";
                readonly 'unicorn/prefer-array-flat-map': "off";
                readonly 'unicorn/prefer-array-some': "off";
                readonly 'unicorn/prefer-blob-reading-methods': "off";
                readonly 'unicorn/prefer-code-point': "off";
                readonly 'unicorn/prefer-date-now': "off";
                readonly 'unicorn/prefer-dom-node-append': "off";
                readonly 'unicorn/prefer-dom-node-dataset': "off";
                readonly 'unicorn/prefer-dom-node-remove': "off";
                readonly 'unicorn/prefer-dom-node-text-content': "off";
                readonly 'unicorn/prefer-event-target': "off";
                readonly 'unicorn/prefer-includes': "off";
                readonly 'unicorn/prefer-logical-operator-over-ternary': "off";
                readonly 'unicorn/prefer-math-min-max': "off";
                readonly 'unicorn/prefer-math-trunc': "off";
                readonly 'unicorn/prefer-modern-dom-apis': "off";
                readonly 'unicorn/prefer-modern-math-apis': "off";
                readonly 'unicorn/prefer-native-coercion-functions': "off";
                readonly 'unicorn/prefer-node-protocol': "off";
                readonly 'unicorn/prefer-number-properties': "off";
                readonly 'unicorn/prefer-optional-catch-binding': "off";
                readonly 'unicorn/prefer-prototype-methods': "off";
                readonly 'unicorn/prefer-query-selector': "off";
                readonly 'unicorn/prefer-reflect-apply': "off";
                readonly 'unicorn/prefer-regexp-test': "off";
                readonly 'unicorn/prefer-set-size': "off";
                readonly 'unicorn/prefer-spread': "off";
                readonly 'unicorn/prefer-string-replace-all': "off";
                readonly 'unicorn/prefer-string-slice': "off";
                readonly 'unicorn/prefer-string-starts-ends-with': "off";
                readonly 'unicorn/prefer-string-trim-start-end': "off";
                readonly 'unicorn/prefer-structured-clone': "off";
                readonly 'unicorn/prefer-type-error': "off";
                readonly 'unicorn/require-array-join-separator': "off";
                readonly 'unicorn/require-number-to-fixed-digits-argument': "off";
                readonly 'unicorn/switch-case-braces': "off";
                readonly 'unicorn/text-encoding-identifier-case': "off";
                readonly 'unicorn/throw-new-error': "off";
            } & {
                readonly 'vitest/no-conditional-tests': "off";
                readonly 'vitest/no-import-node-test': "off";
                readonly 'vitest/prefer-each': "off";
                readonly 'vitest/prefer-to-be-falsy': "off";
                readonly 'vitest/prefer-to-be-object': "off";
                readonly 'vitest/prefer-to-be-truthy': "off";
                readonly 'vitest/require-local-test-context-for-concurrent-snapshots': "off";
            };
        };
        'flat/recommended': {
            name: string;
            rules: {
                readonly 'for-direction': "off";
                readonly 'no-async-promise-executor': "off";
                readonly 'no-caller': "off";
                readonly 'no-class-assign': "off";
                readonly 'no-compare-neg-zero': "off";
                readonly 'no-cond-assign': "off";
                readonly 'no-const-assign': "off";
                readonly 'no-constant-binary-expression': "off";
                readonly 'no-constant-condition': "off";
                readonly 'no-control-regex': "off";
                readonly 'no-debugger': "off";
                readonly 'no-delete-var': "off";
                readonly 'no-dupe-class-members': "off";
                readonly '@typescript-eslint/no-dupe-class-members': "off";
                readonly 'no-dupe-else-if': "off";
                readonly 'no-dupe-keys': "off";
                readonly 'no-duplicate-case': "off";
                readonly 'no-empty-character-class': "off";
                readonly 'no-empty-pattern': "off";
                readonly 'no-empty-static-block': "off";
                readonly 'no-ex-assign': "off";
                readonly 'no-extra-boolean-cast': "off";
                readonly 'no-func-assign': "off";
                readonly 'no-global-assign': "off";
                readonly 'no-import-assign': "off";
                readonly 'no-invalid-regexp': "off";
                readonly 'no-irregular-whitespace': "off";
                readonly 'no-loss-of-precision': "off";
                readonly '@typescript-eslint/no-loss-of-precision': "off";
                readonly 'no-new-native-nonconstructor': "off";
                readonly 'no-nonoctal-decimal-escape': "off";
                readonly 'no-obj-calls': "off";
                readonly 'no-self-assign': "off";
                readonly 'no-setter-return': "off";
                readonly 'no-shadow-restricted-names': "off";
                readonly 'no-sparse-arrays': "off";
                readonly 'no-this-before-super': "off";
                readonly 'no-unsafe-finally': "off";
                readonly 'no-unsafe-negation': "off";
                readonly 'no-unsafe-optional-chaining': "off";
                readonly 'no-unused-labels': "off";
                readonly 'no-unused-private-class-members': "off";
                readonly 'no-unused-vars': "off";
                readonly '@typescript-eslint/no-unused-vars': "off";
                readonly 'no-useless-catch': "off";
                readonly 'no-useless-escape': "off";
                readonly 'no-useless-rename': "off";
                readonly 'no-with': "off";
                readonly 'require-yield': "off";
                readonly 'use-isnan': "off";
                readonly 'valid-typeof': "off";
                readonly 'import/default': "off";
                readonly 'import/named': "off";
                readonly 'import/namespace': "off";
                readonly 'jest/expect-expect': "off";
                readonly 'jest/no-conditional-expect': "off";
                readonly 'jest/no-disabled-tests': "off";
                readonly 'jest/no-export': "off";
                readonly 'jest/no-focused-tests': "off";
                readonly 'jest/no-standalone-expect': "off";
                readonly 'jest/require-to-throw-message': "off";
                readonly 'jest/valid-describe-callback': "off";
                readonly 'jest/valid-expect': "off";
                readonly 'jest/valid-title': "off";
                readonly 'jsdoc/check-property-names': "off";
                readonly 'jsdoc/check-tag-names': "off";
                readonly 'jsdoc/implements-on-classes': "off";
                readonly 'jsdoc/no-defaults': "off";
                readonly 'jsdoc/require-property': "off";
                readonly 'jsdoc/require-property-description': "off";
                readonly 'jsdoc/require-property-name': "off";
                readonly 'jsdoc/require-property-type': "off";
                readonly 'jsdoc/require-yields': "off";
                readonly 'jsx-a11y/alt-text': "off";
                readonly 'jsx-a11y/anchor-has-content': "off";
                readonly 'jsx-a11y/anchor-is-valid': "off";
                readonly 'jsx-a11y/aria-activedescendant-has-tabindex': "off";
                readonly 'jsx-a11y/aria-props': "off";
                readonly 'jsx-a11y/aria-role': "off";
                readonly 'jsx-a11y/aria-unsupported-elements': "off";
                readonly 'jsx-a11y/autocomplete-valid': "off";
                readonly 'jsx-a11y/click-events-have-key-events': "off";
                readonly 'jsx-a11y/heading-has-content': "off";
                readonly 'jsx-a11y/html-has-lang': "off";
                readonly 'jsx-a11y/iframe-has-title': "off";
                readonly 'jsx-a11y/img-redundant-alt': "off";
                readonly 'jsx-a11y/label-has-associated-control': "off";
                readonly 'jsx-a11y/lang': "off";
                readonly 'jsx-a11y/media-has-caption': "off";
                readonly 'jsx-a11y/mouse-events-have-key-events': "off";
                readonly 'jsx-a11y/no-access-key': "off";
                readonly 'jsx-a11y/no-aria-hidden-on-focusable': "off";
                readonly 'jsx-a11y/no-autofocus': "off";
                readonly 'jsx-a11y/no-distracting-elements': "off";
                readonly 'jsx-a11y/no-redundant-roles': "off";
                readonly 'jsx-a11y/prefer-tag-over-role': "off";
                readonly 'jsx-a11y/role-has-required-aria-props': "off";
                readonly 'jsx-a11y/role-supports-aria-props': "off";
                readonly 'jsx-a11y/scope': "off";
                readonly 'jsx-a11y/tabindex-no-positive': "off";
                readonly '@next/next/google-font-display': "off";
                readonly '@next/next/google-font-preconnect': "off";
                readonly '@next/next/inline-script-id': "off";
                readonly '@next/next/next-script-for-ga': "off";
                readonly '@next/next/no-assign-module-variable': "off";
                readonly '@next/next/no-async-client-component': "off";
                readonly '@next/next/no-before-interactive-script-outside-document': "off";
                readonly '@next/next/no-css-tags': "off";
                readonly '@next/next/no-document-import-in-page': "off";
                readonly '@next/next/no-duplicate-head': "off";
                readonly '@next/next/no-head-element': "off";
                readonly '@next/next/no-head-import-in-document': "off";
                readonly '@next/next/no-img-element': "off";
                readonly '@next/next/no-page-custom-font': "off";
                readonly '@next/next/no-script-component-in-head': "off";
                readonly '@next/next/no-styled-jsx-in-document': "off";
                readonly '@next/next/no-sync-scripts': "off";
                readonly '@next/next/no-title-in-document-head': "off";
                readonly '@next/next/no-typos': "off";
                readonly '@next/next/no-unwanted-polyfillio': "off";
                readonly 'promise/no-callback-in-promise': "off";
                readonly 'promise/no-new-statics': "off";
                readonly 'promise/valid-params': "off";
                readonly 'react/jsx-key': "off";
                readonly 'react/jsx-no-duplicate-props': "off";
                readonly 'react/jsx-no-target-blank': "off";
                readonly 'react/jsx-no-undef': "off";
                readonly 'react/jsx-props-no-spread-multi': "off";
                readonly 'react/no-children-prop': "off";
                readonly 'react/no-danger-with-children': "off";
                readonly 'react/no-direct-mutation-state': "off";
                readonly 'react/no-find-dom-node': "off";
                readonly 'react/no-is-mounted': "off";
                readonly 'react/no-render-return-value': "off";
                readonly 'react/no-string-refs': "off";
                readonly 'react/void-dom-elements-no-children': "off";
                readonly '@typescript-eslint/no-duplicate-enum-values': "off";
                readonly '@typescript-eslint/no-extra-non-null-assertion': "off";
                readonly '@typescript-eslint/no-misused-new': "off";
                readonly '@typescript-eslint/no-non-null-asserted-optional-chain': "off";
                readonly '@typescript-eslint/no-this-alias': "off";
                readonly '@typescript-eslint/no-unsafe-declaration-merging': "off";
                readonly '@typescript-eslint/no-useless-empty-export': "off";
                readonly '@typescript-eslint/no-wrapper-object-types': "off";
                readonly '@typescript-eslint/prefer-as-const': "off";
                readonly '@typescript-eslint/triple-slash-reference': "off";
                readonly 'unicorn/no-await-in-promise-methods': "off";
                readonly 'unicorn/no-document-cookie': "off";
                readonly 'unicorn/no-empty-file': "off";
                readonly 'unicorn/no-invalid-remove-event-listener': "off";
                readonly 'unicorn/no-new-array': "off";
                readonly 'unicorn/no-single-promise-in-promise-methods': "off";
                readonly 'unicorn/no-thenable': "off";
                readonly 'unicorn/no-unnecessary-await': "off";
                readonly 'unicorn/no-useless-fallback-in-spread': "off";
                readonly 'unicorn/no-useless-length-check': "off";
                readonly 'unicorn/no-useless-spread': "off";
                readonly 'unicorn/prefer-set-size': "off";
                readonly 'unicorn/prefer-string-starts-ends-with': "off";
                readonly 'vitest/no-conditional-tests': "off";
                readonly 'vitest/require-local-test-context-for-concurrent-snapshots': "off";
            };
        };
    };
    buildFromOxlintConfig: (config: {
        [key: string]: unknown;
        plugins?: string[];
        categories?: {
            [x: string]: unknown;
        };
        rules?: {
            [x: string]: unknown;
        };
    }) => import("eslint").Linter.Config<Record<string, "off">>[];
    buildFromOxlintConfigFile: (oxlintConfigFile: string) => import("eslint").Linter.Config<Record<string, "off">>[];
};
export default _default;
